{"version":3,"file":"subtotal.js","sources":["subtotal.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,cAAA;IAAA;;;;EAAA,cAAA,GAAiB,SAAC,WAAD;IACb,IAAG,OAAO,OAAP,KAAkB,QAAlB,IAA+B,OAAO,MAAP,KAAiB,QAAnD;aACI,WAAA,CAAY,OAAA,CAAQ,QAAR,CAAZ,EADJ;KAAA,MAEK,IAAG,OAAO,MAAP,KAAiB,UAAjB,IAAgC,MAAM,CAAC,GAA1C;aACD,MAAA,CAAO,CAAC,QAAD,CAAP,EAAmB,WAAnB,EADC;KAAA,MAAA;aAID,WAAA,CAAY,MAAZ,EAJC;;EAHQ;;EASjB,cAAA,CAAe,SAAC,CAAD;AAEX,QAAA;IAAM;AACF,UAAA;;;;MAAa,2BAAC,KAAD,EAAQ,IAAR;QACT,mDAAM,KAAN,EAAa,IAAb;MADS;;MAGb,UAAA,GAAa,SAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuB,KAAvB,EAA8B,aAA9B;AACT,YAAA;QAAA,GAAA,GAAM;QACN,MAAA,GAAS;AACT,aAAA,uCAAA;;UACI,GAAG,CAAC,IAAJ,sCAAwB,MAAxB;UACA,OAAA,GAAU,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,YAAP,CAAoB,CAApB,CAAT;UACV,IAAG,CAAI,MAAO,CAAA,OAAA,CAAd;YACI,MAAO,CAAA,OAAA,CAAP,GAAkB,aAAA,CAAc,GAAG,CAAC,KAAJ,CAAA,CAAd;YAClB,MAAA,GAAS,KAFb;;UAGA,MAAO,CAAA,OAAA,CAAQ,CAAC,IAAhB,CAAqB,MAArB;AANJ;QAOA,IAAiB,MAAjB;UAAA,IAAI,CAAC,IAAL,CAAU,GAAV,EAAA;;AACA,eAAO;MAXE;;kCAab,aAAA,GAAe,SAAC,MAAD;AACX,YAAA;QAAA,MAAA,GAAS;QACT,MAAA,GAAS;QAET,IAAC,CAAA,QAAQ,CAAC,IAAV,CAAe,MAAf;QACA,MAAA,GAAS,UAAA,CAAW,MAAX,EAAmB,IAAC,CAAA,SAApB,EAA+B,IAAC,CAAA,OAAhC,EAAyC,IAAC,CAAA,QAA1C,EAAoD,CAAA,SAAA,KAAA;iBAAA,SAAC,GAAD;AACzD,mBAAO,KAAC,CAAA,UAAD,CAAY,KAAZ,EAAkB,GAAlB,EAAuB,EAAvB;UADkD;QAAA,CAAA,CAAA,CAAA,IAAA,CAApD;QAET,MAAA,GAAS,UAAA,CAAW,MAAX,EAAmB,IAAC,CAAA,SAApB,EAA+B,IAAC,CAAA,OAAhC,EAAyC,IAAC,CAAA,QAA1C,EAAoD,CAAA,SAAA,KAAA;iBAAA,SAAC,GAAD;AACzD,mBAAO,KAAC,CAAA,UAAD,CAAY,KAAZ,EAAkB,EAAlB,EAAsB,GAAtB;UADkD;QAAA,CAAA,CAAA,CAAA,IAAA,CAApD;QAET,CAAA,GAAI,MAAM,CAAC,MAAP,GAAc;QAClB,CAAA,GAAI,MAAM,CAAC,MAAP,GAAc;QAClB,IAAU,CAAA,GAAI,CAAJ,IAAS,CAAA,GAAI,CAAvB;AAAA,iBAAA;;AACA;aAAS,4EAAT;UACI,OAAA,GAAU,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAA,GAAE,CAAlB;UACV,UAAA,GAAa,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,YAAP,CAAoB,CAApB,CAAb;UACb,IAA0B,CAAI,IAAC,CAAA,IAAK,CAAA,UAAA,CAApC;YAAA,IAAC,CAAA,IAAK,CAAA,UAAA,CAAN,GAAoB,GAApB;;;;AACA;iBAAS,iFAAT;cACI,OAAA,GAAU,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAA,GAAE,CAAlB;cACV,UAAA,GAAa,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,YAAP,CAAoB,CAApB,CAAb;cACb,IAAsE,CAAI,IAAC,CAAA,IAAK,CAAA,UAAA,CAAY,CAAA,UAAA,CAA5F;gBAAA,IAAC,CAAA,IAAK,CAAA,UAAA,CAAY,CAAA,UAAA,CAAlB,GAAgC,IAAC,CAAA,UAAD,CAAY,IAAZ,EAAkB,OAAlB,EAA2B,OAA3B,EAAhC;;4BACA,IAAC,CAAA,IAAK,CAAA,UAAA,CAAY,CAAA,UAAA,CAAW,CAAC,IAA9B,CAAmC,MAAnC;AAJJ;;;AAJJ;;MAZW;;;;OAjBa,CAAC,CAAC,cAAc,CAAC;IAuCjD,CAAC,CAAC,cAAc,CAAC,iBAAjB,GAAqC;IAErC,gBAAA,GAAmB,SAAC,SAAD,EAAY,IAAZ;AACf,UAAA;MAAA,QAAA,GACI;QAAA,KAAA,EAAO;UAAA,aAAA,EAAe,IAAf;SAAP;QACA,aAAA,EAAe;UAAA,MAAA,EAAQ,QAAR;SADf;;MAGJ,IAAA,GAAO,CAAC,CAAC,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,QAAnB,EAA6B,IAA7B;MAEP,YAAA,gDAAsC,CAAE;MACxC,eAAA,GAAqB,uDAA8B,CAAE,sBAAhC,KAAkD,WAArD,GAAsE,IAAI,CAAC,kBAAkB,CAAC,YAA9F,GAAgH;MAClI,IAAG,wDAAO,IAAI,CAAC,mBAAmB,WAAA,KAAe,sBAAjD;QACI,cAAA,GAAoB,YAAH,GAAqB,CAArB,GAA4B,eAAA,GAAkB,EADnE;OAAA,MAAA;QAGI,cAAA,GAAiB,IAAI,CAAC,kBAAkB,CAAC,YAH7C;;MAIA,iBAAA,kDAA2C,CAAE;MAC7C,0BAAA,kDAAoD,CAAE;MACtD,cAAA,GAAoB,uDAA8B,CAAE,sBAAhC,KAAkD,WAArD,GAAsE,IAAI,CAAC,kBAAkB,CAAC,YAA9F,GAAgH;MACjI,YAAA,kDAAsC,CAAE;MACxC,iBAAA,kDAA2C,CAAE;MAC7C,0BAAA,kDAAoD,CAAE;MACtD,eAAA,GAAqB,uDAA8B,CAAE,sBAAhC,KAAkD,WAArD,GAAsE,IAAI,CAAC,kBAAkB,CAAC,YAA9F,GAAgH;MAClI,IAAG,wDAAO,IAAI,CAAC,mBAAmB,WAAA,KAAe,sBAAjD;QACI,cAAA,GAAoB,YAAH,GAAqB,CAArB,GAA4B,eAAA,GAAkB,EADnE;OAAA,MAAA;QAGI,cAAA,GAAiB,IAAI,CAAC,kBAAkB,CAAC,YAH7C;;MAIA,gBAAA,GAAsB,uDAA8B,CAAE,wBAAhC,KAAoD,WAAvD,GAAwE,IAAI,CAAC,kBAAkB,CAAC,cAAhG,GAAoH;MACvI,cAAA,iCAAiB,IAAI,CAAC,iBAAL,IAAI,CAAC,iBAAkB;MACxC,aAAA,gCAAgB,IAAI,CAAC,gBAAL,IAAI,CAAC,gBAAiB;MACtC,cAAA,GAAoB,OAAO,IAAI,CAAC,cAAZ,KAAgC,WAAnC,GAAoD,IAAI,CAAC,cAAzD,GAA6E;MAC9F,cAAA,GAAoB,OAAO,IAAI,CAAC,cAAZ,KAAgC,WAAnC,GAAoD,IAAI,CAAC,cAAzD,GAA6E;MAE9F,QAAA,GAAW,SAAS,CAAC;MACrB,QAAA,GAAW,SAAS,CAAC;MACrB,OAAA,GAAU,SAAS,CAAC,UAAV,CAAA;MACV,OAAA,GAAU,SAAS,CAAC,UAAV,CAAA;MACV,IAAA,GAAO,SAAS,CAAC;MACjB,SAAA,GAAY,SAAS,CAAC;MACtB,SAAA,GAAY,SAAS,CAAC;MACtB,QAAA,GAAW,SAAS,CAAC;MAErB,gBAAA,GAAmB;MACnB,iBAAA,GAAoB;MACpB,YAAA,GAAe;MACf,YAAA,GAAe;MACf,gBAAA,GAAmB;MACnB,iBAAA,GAAoB;MACpB,YAAA,GAAe;MACf,YAAA,GAAe;MACf,mBAAA,GAAsB;MACtB,oBAAA,GAAuB;MACvB,aAAA,GAAgB;MAChB,cAAA,GAAiB;MAGjB,cAAA,GAAiB;MAGjB,QAAA,GAAW,SAAC,OAAD,EAAU,SAAV;AACP,YAAA;QAAA,MAAA,GAAa,IAAA,MAAA,CAAO,WAAA,GAAc,SAAd,GAA0B,SAAjC,EAA4C,GAA5C;eACb,OAAO,CAAC,SAAS,CAAC,KAAlB,CAAwB,MAAxB,CAAA,KAAqC;MAF9B;MAIX,WAAA,GAAc,SAAC,OAAD,EAAU,SAAV;AACV,YAAA;AAAA;AAAA;aAAA,uCAAA;;UACI,MAAA,GAAa,IAAA,MAAA,CAAO,WAAA,GAAc,IAAd,GAAqB,SAA5B,EAAuC,GAAvC;uBACb,OAAO,CAAC,SAAR,GAAoB,OAAO,CAAC,SAAS,CAAC,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC;AAFxB;;MADU;MAKd,QAAA,GAAW,SAAC,OAAD,EAAU,SAAV;AACP,YAAA;AAAA;AAAA;aAAA,uCAAA;;UACI,IAAqC,CAAI,QAAA,CAAS,OAAT,EAAkB,IAAlB,CAAzC;yBAAA,OAAO,CAAC,SAAR,IAAsB,GAAA,GAAM,MAA5B;WAAA,MAAA;iCAAA;;AADJ;;MADO;MAIX,YAAA,GAAe,SAAC,OAAD,EAAU,gBAAV,EAA4B,WAA5B;QACX,WAAA,CAAY,OAAZ,EAAqB,gBAArB;eACA,QAAA,CAAS,OAAT,EAAkB,WAAlB;MAFW;MAKf,qBAAA,GAAwB,SAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB;AACpB,YAAA;QAAA,IAAU,CAAI,IAAI,CAAC,KAAT,IAAmB,CAAI,IAAI,CAAC,KAAK,CAAC,aAA5C;AAAA,iBAAA;;QACA,aAAA,GAAgB;AAChB;AAAA,aAAA,cAAA;;;UACI,OAAA,GAAU;AACV,eAAA,aAAA;;;gBAA8D;cAA9D,OAAQ,CAAA,IAAA,CAAR,GAAgB,SAAU,CAAA,CAAA;;AAA1B;AACA,eAAA,aAAA;;;gBAA8D;cAA9D,OAAQ,CAAA,IAAA,CAAR,GAAgB,SAAU,CAAA,CAAA;;AAA1B;UACA,aAAc,CAAA,KAAA,CAAd,GAAuB,SAAC,CAAD;mBAAO,OAAA,CAAQ,CAAR,EAAW,KAAX,EAAkB,OAAlB,EAA2B,SAA3B;UAAP;AAJ3B;AAKA,eAAO;MARa;MAUxB,aAAA,GAAgB,SAAC,WAAD,EAAc,SAAd,EAAyB,WAAzB,EAAsC,UAAtC,EAAkD,aAAlD;AACZ,YAAA;QAAA,CAAA,GAAI,QAAQ,CAAC,aAAT,CAAuB,WAAvB;QACJ,IAA2B,iBAA3B;UAAA,CAAC,CAAC,SAAF,GAAc,UAAd;;QACA,IAA+B,mBAA/B;UAAA,CAAC,CAAC,WAAF,GAAgB,YAAhB;;QACA,IAA4D,kBAA5D;AAAA,eAAA,kBAAA;;;YAAA,CAAC,CAAC,YAAF,CAAe,IAAf,EAAqB,GAArB;AAAA,WAAA;;QACA,IAA6E,qBAA7E;AAAA,eAAA,sBAAA;;;YAAA,CAAC,CAAC,gBAAF,CAAmB,KAAnB,EAA0B,OAA1B;AAAA,WAAA;;AACA,eAAO;MANK;MAQhB,aAAA,GAAgB,SAAC,CAAD,EAAI,KAAJ;AACZ,YAAA;AAAA;aAAA,UAAA;;;uBACI,CAAC,CAAC,YAAF,CAAe,CAAf,EAAkB,CAAlB;AADJ;;MADY;MAIhB,WAAA,GAAc,SAAC,OAAD,EAAU,SAAV;AACV,YAAA;QAAA,OAAA,GAAU,OAAQ,CAAA,CAAA,CAAE,CAAC,MAAX,GAAkB;QAC5B,IAAA,GAAO;UAAA,QAAA,EAAU,EAAV;;QACP,GAAA,GAAM;QACN,OAAO,CAAC,MAAR,CACI,CAAA,SAAA,KAAA;iBAAA,SAAC,IAAD,EAAO,EAAP;AACI,gBAAA;YAAA,GAAA,GAAM;YACN,EAAE,CAAC,MAAH,CACI,SAAC,GAAD,EAAM,MAAN,EAAc,MAAd,EAAsB,GAAtB;AACI,kBAAA;cAAA,IAAG,CAAI,GAAI,CAAA,MAAA,CAAX;gBACI,GAAA,GAAM,EAAE,CAAC,KAAH,CAAS,CAAT,EAAY,GAAA,GAAI,CAAhB;gBACN,GAAI,CAAA,MAAA,CAAJ,GACI;kBAAA,GAAA,EAAK,GAAL;kBACA,GAAA,EAAK,GADL;kBAEA,WAAA,EAAa,CAFb;kBAGA,QAAA,EAAU,EAHV;kBAIA,IAAA,EAAM,MAJN;kBAKA,GAAA,EAAK,GALL;kBAMA,OAAA,EAAS,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,YAAP,CAAoB,CAApB,CAAT,CANT;kBAOA,SAAA,EAAW,IAPX;kBAQA,MAAA,EAAQ,CARR;kBASA,MAAA,EAAW,GAAA,KAAS,CAAZ,GAAmB,GAAnB,GAA4B,IATpC;kBAUA,EAAA,EAAI,aAAA,CAAc,IAAd,EAAoB,SAApB,EAA+B,MAA/B,CAVJ;kBAWA,YAAA,EAAc,CAXd;;gBAYJ,GAAG,CAAC,QAAQ,CAAC,IAAb,CAAkB,MAAlB,EAfJ;;cAgBA,IAAG,GAAA,GAAM,CAAT;gBACI,GAAG,CAAC,WAAJ,GADJ;;cAEA,GAAA;cACA,IAAG,MAAA,KAAU,OAAb;gBACI,IAAA,GAAO;AACP,qBAAS,gGAAT;wBAA6B,OAAA,GAAU;;;kBACnC,IAAK,CAAA,EAAG,CAAA,CAAA,CAAH,CAAM,CAAC,MAAZ;kBACA,IAAG,CAAI,IAAK,CAAA,EAAG,CAAA,CAAA,CAAH,CAAM,CAAC,SAAnB;oBACI,IAAK,CAAA,EAAG,CAAA,CAAA,CAAH,CAAM,CAAC,SAAZ,GAAwB,GAAI,CAAA,MAAA,EADhC;;kBAEA,IAAA,GAAO,IAAK,CAAA,EAAG,CAAA,CAAA,CAAH;AAJhB;AAKA,uBAAO,KAPX;;AAQA,qBAAO,GAAI,CAAA,MAAA;YA5Bf,CADJ,EA8BI,IA9BJ;YA+BA,GAAA;AACA,mBAAO;UAlCX;QAAA,CAAA,CAAA,CAAA,IAAA,CADJ,EAoCI,IApCJ;AAqCA,eAAO;MAzCG;MA2Cd,gBAAA,GAAmB,SAAC,GAAD;AACf,YAAA;QAAA,IAAA,GACI;UAAA,QAAA,EAAU,aAAV;UACA,QAAA,EAAU,gBADV;UAEA,cAAA,EAAgB,mBAFhB;;QAGJ,IAAG,GAAA,IAAO,cAAV;UACI,IAAA,GACI;YAAA,QAAA,EAAU,cAAV;YACA,QAAA,EAAU,iBADV;YAEA,cAAA,EAAgB,oBAFhB;YAFR;;QAKA,IAAG,GAAA,IAAO,cAAV;UACI,IAAA,GACI;YAAA,QAAA,EAAU,EAAV;YAFR;;AAGA,eAAO;MAbQ;MAenB,oBAAA,GAAuB,SAAC,KAAD,EAAQ,gBAAR,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,EAA9C,EAAkD,GAAlD;AACnB,YAAA;QAAA,OAAA,GAAU,QAAS,CAAA,GAAA;QACnB,WAAA,GAAc;QACd,SAAA,GAAY;QACZ,IAAA,GAAO,gBAAA,CAAiB,GAAjB;QACP,IAAG,GAAA,GAAM,QAAQ,CAAC,MAAT,GAAgB,CAAzB;UACI,SAAA,IAAa,GAAA,GAAM,IAAI,CAAC;UACxB,IAAqD,CAAI,CAAC,0BAAA,IAA8B,YAA9B,IAA8C,GAAA,GAAM,eAArD,CAAzD;YAAA,WAAA,GAAc,GAAA,GAAM,IAAI,CAAC,QAAX,GAAsB,GAAtB,GAA4B,QAA1C;WAFJ;;QAGA,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,SAApB,EAA+B,WAA/B;QACL,EAAE,CAAC,YAAH,CAAgB,cAAhB,EAAgC,OAAhC;QACA,EAAE,CAAC,WAAH,CAAe,EAAf;QACA,gBAAgB,CAAC,IAAjB,CACI;UAAA,EAAA,EAAI,EAAJ;UACA,EAAA,EAAI,EADJ;UAEA,WAAA,EAAa,IAAI,CAAC,cAFlB;UAGA,aAAA,EAAe,CAHf;UAIA,KAAA,EAAO,EAJP;SADJ;eAMA,KAAK,CAAC,WAAN,CAAkB,EAAlB;MAjBmB;MAmBvB,qBAAA,GAAwB,SAAC,KAAD,EAAQ,gBAAR,EAA0B,QAA1B,EAAoC,QAApC;AACpB,YAAA;QAAA,EAAA,GAAK,aAAA,CAAc,IAAd;QACL,IAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB;UACI,EAAE,CAAC,WAAH,CAAe,aAAA,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC;YAC3C,OAAA,EAAS,QAAQ,CAAC,MADyB;YAE3C,OAAA,EAAS,QAAQ,CAAC,MAFyB;WAAhC,CAAf,EADJ;;QAIA,oBAAA,CAAqB,KAArB,EAA4B,gBAA5B,EAA8C,QAA9C,EAAwD,QAAxD,EAAkE,EAAlE,EAAsE,CAAtE;AACA;aAAS,oGAAT;gBAAmC,CAAA,GAAI,QAAQ,CAAC;;;UAC5C,EAAA,GAAK,aAAA,CAAc,IAAd;uBACL,oBAAA,CAAqB,KAArB,EAA4B,gBAA5B,EAA8C,QAA9C,EAAwD,QAAxD,EAAkE,EAAlE,EAAsE,CAAtE;AAFJ;;MAPoB;MAWxB,gCAAA,GAAmC,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,QAAlC;AAC/B,YAAA;QAAA,CAAA,GAAI,QAAQ,CAAC,MAAT,GAAgB;AACpB;aAAS,sFAAT;gBAAqB,CAAA,GAAI;;;UACrB,EAAA,GAAK,gBAAiB,CAAA,CAAA,CAAE,CAAC;UACzB,OAAA,GAAU,QAAS,CAAA,CAAA;uBACnB,EAAE,CAAC,OAAH,GAAa,SAAC,KAAD;YACT,KAAA,GAAQ,KAAA,IAAS,MAAM,CAAC;mBACxB,qBAAA,CAAsB,gBAAtB,EAAwC,aAAxC,EAAuD,QAAvD,EAAiE,KAAK,CAAC,MAAM,CAAC,YAAb,CAA0B,cAA1B,CAAjE;UAFS;AAHjB;;MAF+B;MASnC,cAAA,GAAiB,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,CAAlC,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,IAAzD;AAEb,YAAA;AAAA;AAAA,aAAA,uCAAA;;UACI,cAAA,CAAe,gBAAf,EAAiC,aAAjC,EAAgD,CAAE,CAAA,KAAA,CAAlD,EAA0D,QAA1D,EAAoE,QAApE,EAA8E,IAA9E;AADJ;QAGA,EAAA,GAAK,gBAAiB,CAAA,CAAC,CAAC,GAAF;QACtB,IAAsB,CAAC,CAAC,GAAF,GAAQ,cAA9B;UAAA,EAAE,EAAE,CAAC,cAAL;;QACA,EAAE,CAAC,KAAK,CAAC,IAAT,CAAc,CAAd;QAEA,CAAC,CAAC,IAAF,GAAS,IAAI,CAAC;QACd,IAAA,GAAO,gBAAA,CAAiB,CAAC,CAAC,GAAnB;QACP,IAAiC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAxD;UAAA,UAAA,GAAa,CAAE,CAAA,CAAC,CAAC,QAAS,CAAA,CAAA,CAAX,EAAf;;QAEA,QAAA,CAAS,CAAC,CAAC,EAAX,EAAkB,YAAD,GAAc,MAAd,GAAoB,CAAC,CAAC,GAAtB,GAA0B,SAA1B,GAAmC,CAAC,CAAC,GAArC,GAAyC,GAAzC,GAA4C,IAAI,CAAC,QAAlE;QACA,CAAC,CAAC,EAAE,CAAC,YAAL,CAAkB,cAAlB,EAAkC,CAAC,CAAC,IAApC;QACA,IAAiC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAxD;UAAA,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,CAAC,CAAC,aAAjB;;QACA,IAAG,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAqB,CAArB,IAA2B,QAAQ,CAAC,MAAT,KAAqB,CAAnD;UACI,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,EADnB;;QAEA,IAAG,CAAC,CAAC,MAAF,GAAW,CAAX,IAAiB,CAAI,CAAC,YAAA,IAAgB,CAAC,CAAC,GAAF,IAAS,cAA1B,CAAxB;UACI,IAAG,CAAI,0BAAP;YACI,CAAC,CAAC,EAAE,CAAC,WAAL,GAAsB,IAAI,CAAC,QAAN,GAAe,GAAf,GAAkB,CAAC,CAAC;YACzC,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,SAAC,KAAD;cACX,KAAA,GAAQ,KAAA,IAAS,MAAM,CAAC;qBACxB,SAAA,CAAU,gBAAV,EAA4B,aAA5B,EAA2C,QAAA,CAAS,KAAK,CAAC,MAAM,CAAC,YAAb,CAA0B,cAA1B,CAAT,CAA3C;YAFW;YAGf,CAAC,CAAC,GAAF,GAAQ,aAAA,CAAc,IAAd,EAAoB,kCAApB;YACR,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,cAAnB,EAAmC,CAAC,CAAC,IAArC;YACA,CAAC,CAAC,GAAG,CAAC,OAAN,GAAgB,QAAQ,CAAC,MAAT,GAAgB,CAAC,CAAC;YAClC,IAAgC,CAAC,iBAAA,IAAsB,CAAC,CAAC,GAAF,GAAQ,cAA/B,CAAA,IAAkD,CAAC,CAAC,GAAF,GAAQ,cAA1F;cAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB,OAAtB;;YACA,UAAU,CAAC,EAAE,CAAC,WAAd,CAA0B,CAAC,CAAC,GAA5B;YACA,CAAC,CAAC,EAAE,CAAC,OAAL,GAVJ;WADJ;;;eAcQ,CAAE,YAAV,IAA0B,CAAC,CAAC,EAAE,CAAC;;QAE/B,CAAC,CAAC,WAAF,GAAgB,IAAI,CAAC;QACrB,EAAE,CAAC,EAAE,CAAC,WAAN,CAAkB,CAAC,CAAC,EAApB;QACA,CAAC,CAAC,EAAF,GAAO,EAAE,CAAC;QACV,aAAa,CAAC,IAAd,CAAmB,CAAnB;eACA,IAAI,CAAC,OAAL;MAtCa;MAwCjB,gBAAA,GAAmB,SAAC,GAAD;AACf,YAAA;QAAA,IAAA,GACI;UAAA,QAAA,EAAU,aAAV;UACA,QAAA,EAAU,gBADV;UAEA,cAAA,EAAgB,mBAFhB;;QAGJ,IAAG,GAAA,IAAO,cAAV;UACI,IAAA,GACI;YAAA,QAAA,EAAU,cAAV;YACA,QAAA,EAAU,iBADV;YAEA,cAAA,EAAgB,oBAFhB;YAFR;;QAKA,IAAG,GAAA,IAAO,cAAV;UACI,IAAA,GAAO;YAAA,QAAA,EAAU,EAAV;YADX;;AAEA,eAAO;MAZQ;MAcnB,qBAAA,GAAwB,SAAC,KAAD,EAAQ,gBAAR,EAA0B,QAA1B,EAAoC,QAApC;AACpB,YAAA;QAAA,EAAA,GAAK,aAAA,CAAc,IAAd;QACL,gBAAgB,CAAC,EAAjB,GAAsB;AACtB,aAAA,aAAA;;;UACI,WAAA,GAAc;UACd,SAAA,GAAY;UACZ,IAAG,CAAA,GAAI,QAAQ,CAAC,MAAT,GAAgB,CAAvB;YACI,SAAA,IAAa;YACb,IAAqD,CAAI,CAAC,0BAAA,IAA8B,CAAA,IAAK,cAAnC,IAAqD,CAAA,IAAK,cAA3D,CAAzD;cAAA,WAAA,GAAc,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,QAA1C;aAFJ;;UAGA,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,SAApB,EAA+B,WAA/B;UACL,EAAE,CAAC,YAAH,CAAgB,cAAhB,EAAgC,OAAhC;UACA,EAAE,CAAC,WAAH,CAAe,EAAf;UACA,gBAAgB,CAAC,EAAE,CAAC,IAApB,CACI;YAAA,EAAA,EAAI,EAAJ;YACA,WAAA,EAAgB,CAAA,GAAI,cAAP,GAA2B,mBAA3B,GAAoD,oBADjE;YAEA,aAAA,EAAe,CAFf;YAGA,OAAA,EAAS,EAHT;WADJ;AATJ;QAcA,IAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB;UACI,EAAA,GAAK,aAAA,CAAc,IAAd;UACL,EAAE,CAAC,WAAH,CAAe,EAAf,EAFJ;;QAGA,KAAK,CAAC,WAAN,CAAkB,EAAlB;eACA,gBAAgB,CAAC,EAAjB,GAAsB;MArBF;MAuBxB,gCAAA,GAAmC,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,QAAlC;AAC/B,YAAA;QAAA,CAAA,GAAI,QAAQ,CAAC,MAAT,GAAgB;AACpB;aAAS,sFAAT;gBAAqB,CAAA,GAAI;;;UACrB,EAAA,GAAK,gBAAgB,CAAC,EAAG,CAAA,CAAA;UACzB,OAAA,GAAU,QAAS,CAAA,CAAA;uBACnB,EAAE,CAAC,EAAE,CAAC,OAAN,GAAgB,SAAC,KAAD;YACZ,KAAA,GAAQ,KAAA,IAAS,MAAM,CAAC;mBACxB,qBAAA,CAAsB,gBAAtB,EAAwC,aAAxC,EAAuD,QAAvD,EAAiE,KAAK,CAAC,MAAM,CAAC,YAAb,CAA0B,cAA1B,CAAjE;UAFY;AAHpB;;MAF+B;MASnC,oBAAA,GAAuB,SAAC,EAAD,EAAK,QAAL,EAAe,QAAf;AACnB,YAAA;QAAA,OAAA,GAAU;QACV,IAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB;UACI,OAAA,GAAU,QAAQ,CAAC,MAAT,GAAkB,CAAI,QAAQ,CAAC,MAAT,KAAmB,CAAtB,GAA6B,CAA7B,GAAoC,CAArC,EADhC;;QAEA,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,wBAApB,EAA8C,IAAI,CAAC,aAAa,CAAC,MAAjE,EAAyE;UAAC,OAAA,EAAS,OAAV;SAAzE;eACL,EAAE,CAAC,WAAH,CAAe,EAAf;MALmB;MAOvB,cAAA,GAAiB,SAAC,KAAD,EAAQ,gBAAR,EAA0B,aAA1B,EAAyC,CAAzC,EAA4C,QAA5C,EAAsD,QAAtD,EAAgE,IAAhE;AAEb,YAAA;AAAA;AAAA,aAAA,uCAAA;;UACI,cAAA,CAAe,KAAf,EAAsB,gBAAtB,EAAwC,aAAxC,EAAuD,CAAE,CAAA,KAAA,CAAzD,EAAiE,QAAjE,EAA2E,QAA3E,EAAqF,IAArF;AADJ;QAIA,EAAA,GAAK,gBAAgB,CAAC,EAAG,CAAA,CAAC,CAAC,GAAF;QACzB,IAAsB,CAAC,CAAC,GAAF,GAAQ,cAA9B;UAAA,EAAE,EAAE,CAAC,cAAL;;QACA,EAAE,CAAC,OAAO,CAAC,IAAX,CAAgB,CAAhB;QAEA,CAAC,CAAC,IAAF,GAAS,IAAI,CAAC;QACd,IAAA,GAAO,gBAAA,CAAiB,CAAC,CAAC,GAAnB;QACP,IAAiC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAxD;UAAA,UAAA,GAAa,CAAE,CAAA,CAAC,CAAC,QAAS,CAAA,CAAA,CAAX,EAAf;;QAEA,QAAA,CAAS,CAAC,CAAC,EAAX,EAAe,KAAA,GAAM,CAAC,CAAC,GAAR,GAAY,SAAZ,GAAqB,CAAC,CAAC,GAAvB,GAA2B,GAA3B,GAA8B,YAA7C;QACA,IAAmC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAd,KAA0B,CAA7D;UAAA,QAAA,CAAS,CAAC,CAAC,EAAX,EAAe,gBAAf,EAAA;;QACA,CAAC,CAAC,EAAE,CAAC,YAAL,CAAkB,cAAlB,EAAkC,CAAC,CAAC,IAApC;QACA,IAAoB,CAAC,CAAC,GAAF,KAAS,QAAQ,CAAC,MAAT,GAAgB,CAAzB,IAA+B,QAAQ,CAAC,MAAT,KAAqB,CAAxE;UAAA,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,EAAf;;QACA,IAAiC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAxD;UAAA,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,CAAC,CAAC,aAAjB;;QAEA,IAAG,CAAC,cAAA,IAAmB,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAqB,CAAzC,CAAA,IAA+C,CAAC,CAAI,cAAJ,IAAuB,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAA/C,CAAlD;UACI,CAAC,CAAC,EAAF,GAAO,UAAU,CAAC;UAClB,CAAC,CAAC,EAAE,CAAC,YAAL,CAAkB,CAAC,CAAC,EAApB,EAAwB,UAAU,CAAC,EAAnC;UACA,CAAC,CAAC,GAAF,GAAQ,UAAU,CAAC,IAHvB;SAAA,MAAA;UAKI,CAAC,CAAC,EAAF,GAAO,aAAA,CAAc,IAAd,EAAoB,oBAAA,GAAqB,CAAC,CAAC,GAA3C;UACP,CAAC,CAAC,EAAE,CAAC,WAAL,CAAiB,CAAC,CAAC,EAAnB,EANJ;;QAQA,IAAG,CAAC,CAAC,MAAF,GAAW,CAAX,IAAiB,CAAI,CAAC,YAAA,IAAgB,CAAC,CAAC,GAAF,IAAS,cAA1B,CAAxB;UACI,IAAG,CAAI,0BAAP;YACI,QAAA,CAAS,CAAC,CAAC,EAAX,EAAe,IAAI,CAAC,QAApB;YACA,CAAC,CAAC,EAAE,CAAC,WAAL,GAAsB,IAAI,CAAC,QAAN,GAAe,GAAf,GAAkB,CAAC,CAAC;YACzC,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,SAAC,KAAD;cACX,KAAA,GAAQ,KAAA,IAAS,MAAM,CAAC;qBACxB,SAAA,CAAU,gBAAV,EAA4B,aAA5B,EAA2C,QAAA,CAAS,KAAK,CAAC,MAAM,CAAC,YAAb,CAA0B,cAA1B,CAAT,CAA3C;YAFW,EAHnB;;UAOA,IAAG,CAAC,CAAC,QAAQ,CAAC,MAAX,GAAoB,CAAvB;YACI,CAAC,CAAC,GAAF,GAAQ,aAAA,CAAc,IAAd,EAAoB,sCAAA,GAAuC,CAAC,CAAC,GAAzC,GAA6C,SAA7C,GAAsD,CAAC,CAAC,GAAxD,GAA4D,GAA5D,GAA+D,IAAI,CAAC,QAAxF;YACR,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,cAAnB,EAAmC,CAAC,CAAC,IAArC;YACA,CAAC,CAAC,GAAG,CAAC,OAAN,GAAgB,QAAQ,CAAC,MAAT,GAAgB,CAAC,CAAC,CAAC,GAAF,GAAM,CAAP,CAAhB,GAA4B,CAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB,GAA6B,CAA7B,GAAoC,CAApC;YAC5C,IAAgC,CAAC,iBAAA,IAAsB,CAAC,CAAC,GAAF,GAAQ,cAA/B,CAAA,IAAkD,CAAC,CAAC,GAAF,GAAQ,cAA1F;cAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB,OAAtB;;YACA,CAAC,CAAC,EAAE,CAAC,OAAL;YAEA,QAAA,CAAS,CAAC,CAAC,EAAX,EAAe,IAAI,CAAC,QAApB;YACA,IAAG,cAAH;cACI,CAAC,CAAC,EAAE,CAAC,WAAL,CAAiB,CAAC,CAAC,GAAnB,EADJ;aAAA,MAAA;cAGI,CAAC,CAAC,GAAF,GAAQ,aAAA,CAAc,IAAd,EAAoB,oBAAA,GAAqB,CAAC,CAAC,GAAvB,GAA2B,GAA3B,GAA8B,IAAI,CAAC,QAAvD;cACR,CAAC,CAAC,GAAG,CAAC,WAAN,CAAkB,CAAC,CAAC,GAApB;cACA,KAAK,CAAC,WAAN,CAAkB,CAAC,CAAC,GAApB,EALJ;aARJ;;UAcA,KAAK,CAAC,YAAN,CAAmB,CAAC,CAAC,EAArB,EAAyB,UAAU,CAAC,EAApC,EAtBJ;SAAA,MAAA;UAwBI,IAA0B,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAqB,CAA/C;YAAA,KAAK,CAAC,WAAN,CAAkB,CAAC,CAAC,EAApB,EAAA;WAxBJ;;;eA0BQ,CAAE,YAAV,IAA0B,CAAC,CAAC,EAAE,CAAC;;QAE/B,CAAC,CAAC,WAAF,GAAgB,IAAI,CAAC;QACrB,aAAa,CAAC,IAAd,CAAmB,CAAnB;eACA,IAAI,CAAC,OAAL;MA1Da;MA6DjB,WAAA,GAAc,SAAC,KAAD,EAAQ,aAAR,EAAuB,aAAvB;AACV,YAAA;AAAA;aAAA,+CAAA;;UACI,OAAA,GAAU,gBAAA,CAAiB,SAAS,CAAC,GAA3B;UACV,UAAA,GAAa,SAAS,CAAC;UACvB,aAAA,GAAgB,SAAS,CAAC,WAAV,KAAyB;AACzC,eAAA,iDAAA;;YACI,UAAA,GAAa,SAAS,CAAC;YACvB,UAAA,4DAA4C;cAAC,KAAA,EAAO,CAAC,SAAA;uBAAG;cAAH,CAAD,CAAR;cAAmB,MAAA,EAAQ,SAAA;uBAAG;cAAH,CAA3B;;YAC5C,GAAA,GAAM,UAAU,CAAC,KAAX,CAAA;YACN,aAAA,GAAgB,SAAS,CAAC,WAAV,KAAyB;YACzC,OAAA,GAAU,gBAAA,CAAiB,SAAS,CAAC,GAA3B;YACV,KAAA,GAAQ;YACR,IAAkD,aAAlD;cAAA,KAAA,IAAS,kBAAA,GAAmB,OAAO,CAAC,SAApC;;YACA,IAAkD,aAAlD;cAAA,KAAA,IAAS,kBAAA,GAAmB,OAAO,CAAC,SAApC;;YACA,KAAA,IAAY,CAAC,aAAA,IAAkB,CAAC,SAAS,CAAC,GAAV,IAAiB,cAAjB,IAAmC,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAApC,CAAnB,CAAA,IAAmH,CAAC,SAAS,CAAC,GAAV,GAAgB,cAAjB,CAAtH,GAA4J,GAAA,GAAI,YAAhK,GAAoL,GAAA,GAAI;YACjM,KAAA,IAAY,CAAC,aAAA,IAAkB,CAAC,YAAA,IAAgB,SAAS,CAAC,GAAV,GAAgB,eAAhC,IAAmD,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAApD,CAAnB,CAAA,IAAmI,CAAC,SAAS,CAAC,GAAV,GAAgB,cAAjB,CAAtI,GAA4K,GAAA,GAAI,YAAhL,GAAoM,GAAA,GAAI;YACjN,KAAA,IAAS,CAAA,MAAA,GAAO,SAAS,CAAC,GAAjB,CAAA,GACL,CAAA,MAAA,GAAO,SAAS,CAAC,GAAjB,CADK,GAEL,CAAA,SAAA,GAAU,SAAS,CAAC,GAApB,CAFK,GAGL,CAAA,SAAA,GAAU,SAAS,CAAC,GAApB;YACJ,aAAA,GAAgB,qBAAA,CAAsB,GAAtB,EAA2B,SAAS,CAAC,GAArC,EAA0C,SAAS,CAAC,GAApD;YAChB,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,KAApB,EAA2B,UAAU,CAAC,MAAX,CAAkB,GAAlB,CAA3B,EACD;cAAA,YAAA,EAAc,GAAd;cACA,cAAA,EAAgB,SAAS,CAAC,IAD1B;cAEA,cAAA,EAAgB,SAAS,CAAC,IAF1B;aADC,EAG+B,aAH/B;YAIL,IAAG,CAAI,cAAP;cACI,IAA6B,CAAC,SAAS,CAAC,GAAV,GAAgB,cAAhB,IAAkC,SAAS,CAAC,GAAV,GAAgB,cAAnD,CAAA,IAAsE,CAAC,aAAA,IAAkB,CAAC,SAAS,CAAC,GAAV,IAAiB,cAAjB,IAAmC,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAApC,CAAnB,CAAtE,IAAyL,CAAC,aAAA,IAAkB,CAAC,YAAA,IAAgB,SAAS,CAAC,GAAV,GAAgB,eAAhC,IAAmD,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAApD,CAAnB,CAAtN;gBAAA,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,OAAnB;eADJ;;YAGA,SAAS,CAAC,EAAE,CAAC,WAAb,CAAyB,EAAzB;AAvBJ;UA0BA,eAAA,GAAkB,SAAU,CAAA,UAAA;UAC5B,GAAA,GAAM,eAAe,CAAC,KAAhB,CAAA;UACN,KAAA,GAAQ,oBAAA,GAAqB,OAAO,CAAC;UACrC,IAA+B,aAA/B;YAAA,KAAA,IAAS,mBAAT;;UACA,KAAA,IAAY,aAAA,IAAkB,CAAC,SAAS,CAAC,GAAV,IAAiB,cAAjB,IAAmC,CAAI,cAAvC,IAAyD,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAA1D,CAArB,GAA4I,GAAA,GAAI,YAAhJ,GAAoK,GAAA,GAAI;UACjL,KAAA,IAAS,MAAA,GAAO,SAAS,CAAC,GAAjB,GAAqB,SAArB,GAA8B,SAAS,CAAC;UACjD,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,KAApB,EAA2B,eAAe,CAAC,MAAhB,CAAuB,GAAvB,CAA3B,EACD;YAAA,YAAA,EAAc,GAAd;YACA,UAAA,EAAY,KAAA,GAAM,SAAS,CAAC,GAD5B;YAEA,aAAA,EAAe,KAAA,GAAM,SAAS,CAAC,GAF/B;YAGA,cAAA,EAAgB,SAAS,CAAC,IAH1B;WADC,EAI+B,qBAAA,CAAsB,GAAtB,EAA2B,SAAS,CAAC,GAArC,EAA0C,EAA1C,CAJ/B;UAKL,IAAG,CAAI,cAAP;YACI,IAA6B,CAAC,SAAS,CAAC,GAAV,GAAgB,cAAjB,CAAA,IAAqC,CAAC,aAAA,IAAkB,CAAC,SAAS,CAAC,GAAV,IAAiB,cAAjB,IAAmC,CAAC,iBAAA,IAAsB,SAAS,CAAC,GAAV,GAAgB,cAAvC,CAApC,CAAnB,CAAlE;cAAA,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,OAAnB;aADJ;;uBAEA,SAAS,CAAC,EAAE,CAAC,WAAb,CAAyB,EAAzB;AA3CJ;;MADU;MA8Cd,oBAAA,GAAuB,SAAC,QAAD,EAAW,QAAX;AACnB,YAAA;QAAA,EAAA,GAAK,aAAA,CAAc,IAAd;QACL,OAAA,GAAU,QAAQ,CAAC,MAAT,GAAkB,CAAI,QAAQ,CAAC,MAAT,KAAmB,CAAtB,GAA6B,CAA7B,GAAoC,CAArC;QAC5B,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,wBAApB,EAA8C,IAAI,CAAC,aAAa,CAAC,MAAjE,EAAyE;UAAC,OAAA,EAAS,OAAV;SAAzE;QACL,EAAE,CAAC,WAAH,CAAe,EAAf;AACA,eAAO;MALY;MAOvB,cAAA,GAAiB,SAAC,EAAD,EAAK,aAAL;AACb,YAAA;AAAA;aAAA,+CAAA;;gBAA4B,CAAC,CAAC,MAAF,KAAc;;;UACtC,OAAA,GAAU,gBAAA,CAAiB,CAAC,CAAC,GAAnB;UACV,QAAA,GAAW,2BAAA,GAA4B,OAAO,CAAC,QAApC,GAA6C,MAA7C,GAAmD,CAAC,CAAC,GAArD,GAAyD,SAAzD,GAAkE,CAAC,CAAC;UAC/E,IAAiC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAxD;YAAA,QAAA,IAAY,kBAAZ;;UACA,eAAA,GAAkB,SAAU,CAAA,CAAC,CAAC,OAAF;UAC5B,GAAA,GAAM,eAAe,CAAC,KAAhB,CAAA;UACN,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,QAApB,EAA8B,eAAe,CAAC,MAAhB,CAAuB,GAAvB,CAA9B,EACD;YAAA,YAAA,EAAc,GAAd;YACA,UAAA,EAAY,KAAA,GAAM,CAAC,CAAC,GADpB;YAEA,cAAA,EAAgB,EAAA,GAAG,CAAC,CAAC,IAFrB;WADC,EAG4B,qBAAA,CAAsB,GAAtB,EAA2B,EAA3B,EAA+B,CAAC,CAAC,GAAjC,CAH5B;UAIL,IAA6B,CAAC,CAAC,CAAC,GAAF,GAAQ,cAAT,CAAA,IAA4B,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAAvB,IAA6B,CAAC,YAAA,IAAgB,CAAC,CAAC,GAAF,GAAQ,eAAxB,IAA2C,CAAC,iBAAA,IAAsB,CAAC,CAAC,GAAF,GAAQ,cAA/B,CAA5C,CAA9B,CAAzD;YAAA,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,OAAnB;;uBACA,EAAE,CAAC,WAAH,CAAe,EAAf;AAXJ;;MADa;MAcjB,eAAA,GAAkB,SAAC,MAAD,EAAS,EAAT;AACd,YAAA;QAAA,eAAA,GAAkB;QAClB,GAAA,GAAM,eAAe,CAAC,KAAhB,CAAA;QACN,EAAA,GAAK,aAAA,CAAc,IAAd,EAAoB,eAApB,EAAqC,eAAe,CAAC,MAAhB,CAAuB,GAAvB,CAArC,EACD;UAAC,YAAA,EAAc,GAAf;SADC,EAED,qBAAA,CAAsB,GAAtB,EAA2B,EAA3B,EAA+B,EAA/B,CAFC;QAGL,EAAE,CAAC,WAAH,CAAe,EAAf;eACA,MAAM,CAAC,WAAP,CAAmB,EAAnB;MAPc;MASlB,iBAAA,GAAoB,SAAC,CAAD;eAChB,CAAA,CAAE,CAAC,CAAC,EAAJ,CAAO,CAAC,OAAR,CAAgB,gBAAhB,CACI,CAAC,IADL,CACU,6BAAA,GAA8B,CAAC,CAAC,IAAhC,GAAqC,yBAArC,GAA8D,CAAC,CAAC,IAAhE,GAAqE,KAD/E,CAEI,CAAC,WAFL,CAEiB,YAFjB,CAGI,CAAC,QAHL,CAGc,YAHd,CAII,CAAC,GAJL,CAIS,SAJT,EAIoB,MAJpB;MADgB;MAOpB,uBAAA,GAA0B,SAAC,CAAD;QACtB,CAAA,CAAE,CAAC,CAAC,EAAJ,CAAO,CAAC,OAAR,CAAgB,gBAAhB,CACI,CAAC,IADL,CACU,6BAAA,GAA8B,CAAC,CAAC,IAAhC,GAAqC,yBAArC,GAA8D,CAAC,CAAC,IAAhE,GAAqE,KAD/E,CAEI,CAAC,WAFL,CAEoB,gBAAD,GAAkB,GAAlB,GAAqB,YAFxC,CAGI,CAAC,QAHL,CAGiB,iBAAD,GAAmB,GAAnB,GAAsB,YAHtC,CAII,CAAC,GAJL,CAIS,kBAAA,GAAmB,YAJ5B,CAKI,CAAC,GALL,CAKS,SALT,EAKoB,EALpB;QAMA,CAAC,CAAC,EAAE,CAAC,WAAL,GAAmB,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,CAAC,CAAC;eAClD,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe;MARO;MAU1B,gBAAA,GAAmB,SAAC,EAAD,EAAK,CAAL;AACf,YAAA;AAAA;AAAA,aAAA,uCAAA;;UACI,gBAAA,CAAiB,EAAG,CAAA,KAAA,CAApB,EAA4B,CAA5B;AADJ;eAGA,iBAAA,CAAkB,EAAlB;MAJe;MAMnB,WAAA,GAAc,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,CAAlC,EAAqC,IAArC;AACV,YAAA;QAAA,IAAU,YAAA,IAAgB,0BAAhB,IAA8C,CAAI,aAAc,CAAA,CAAA,CAA1E;AAAA,iBAAA;;QAEA,CAAA,GAAI,aAAc,CAAA,CAAA;QAClB,IAAU,CAAC,CAAC,GAAF,IAAS,cAAT,IAA2B,CAAC,CAAC,WAAF,KAAiB,oBAAtD;AAAA,iBAAA;;QAEA,OAAA,GAAU,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe;AACzB;AAAA,aAAA,uCAAA;;UACI,EAAA,GAAK,CAAE,CAAA,KAAA;UACP,gBAAA,CAAiB,EAAjB,EAAqB,CAArB;AAFJ;QAIA,uBAAA,CAAwB,CAAxB;QAEA,CAAA,GAAI,CAAC,CAAC;AACN,eAAM,CAAA,KAAO,IAAb;UACI,CAAC,CAAC,EAAE,CAAC,OAAL,IAAgB;UAChB,CAAA,GAAI,CAAC,CAAC;QAFV;QAGA,CAAC,CAAC,WAAF,GAAgB;QAChB,eAAA,GAAkB,gBAAiB,CAAA,CAAC,CAAC,GAAF;QACnC,eAAe,CAAC,aAAhB;QACA,IAAG,eAAe,CAAC,aAAhB,KAAiC,CAApC;AACI;eAAS,oIAAT;kBAAiD,CAAA,IAAK;;;YAClD,eAAA,GAAkB,gBAAiB,CAAA,CAAA;YACnC,YAAA,CAAa,eAAe,CAAC,EAA7B,EAAiC,aAAjC,EAAgD,cAAhD;YACA,eAAe,CAAC,EAAE,CAAC,WAAnB,GAAiC,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,eAAe,CAAC,EAAE,CAAC,YAAnB,CAAgC,cAAhC;yBAC9D,eAAe,CAAC,WAAhB,GAA8B;AAJlC;yBADJ;;MApBU;MA2Bd,YAAA,GAAe,SAAC,EAAD;eACX,CAAA,CAAE,EAAE,CAAC,EAAL,CAAQ,CAAC,OAAT,CAAiB,gBAAjB,CACI,CAAC,IADL,CACU,6BAAA,GAA8B,EAAE,CAAC,IAAjC,GAAsC,yBAAtC,GAA+D,EAAE,CAAC,IAAlE,GAAuE,KADjF,CAEI,CAAC,WAFL,CAEiB,YAFjB,CAGI,CAAC,QAHL,CAGc,YAHd,CAII,CAAC,GAJL,CAIS,kBAAA,GAAmB,YAJ5B,CAKI,CAAC,GALL,CAKS,SALT,EAKoB,EALpB;MADW;MAQf,qBAAA,GAAwB,SAAC,CAAD;QACpB,CAAA,CAAE,CAAC,CAAC,EAAJ,CAAO,CAAC,OAAR,CAAgB,gBAAhB,CACI,CAAC,IADL,CACU,6BAAA,GAA8B,CAAC,CAAC,IAAhC,GAAqC,yBAArC,GAA8D,CAAC,CAAC,IAAhE,GAAqE,KAD/E,CAEI,CAAC,WAFL,CAEoB,iBAAD,GAAmB,GAAnB,GAAsB,YAFzC,CAGI,CAAC,QAHL,CAGiB,gBAAD,GAAkB,GAAlB,GAAqB,YAHrC,CAII,CAAC,GAJL,CAIS,SAJT,EAIoB,MAJpB;eAKA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;MAND;MAQxB,qBAAA,GAAwB,SAAC,CAAD;QACpB,CAAA,CAAE,CAAC,CAAC,EAAJ,CAAO,CAAC,OAAR,CAAgB,gBAAhB,CACI,CAAC,IADL,CACU,6BAAA,GAA8B,CAAC,CAAC,IAAhC,GAAqC,yBAArC,GAA8D,CAAC,CAAC,IAAhE,GAAqE,KAD/E,CAEI,CAAC,WAFL,CAEoB,iBAAD,GAAmB,GAAnB,GAAsB,YAFzC,CAGI,CAAC,QAHL,CAGiB,gBAAD,GAAkB,GAAlB,GAAqB,YAHrC,CAII,CAAC,GAJL,CAIS,kBAAA,GAAmB,YAJ5B,CAKI,CAAC,GALL,CAKS,SALT,EAKoB,EALpB;QAMA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;QACrB,EAAE,CAAC,CAAC,EAAE,CAAC;QACP,IAA4B,aAA5B;iBAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB,GAAtB;;MAToB;MAWxB,cAAA,GAAiB,SAAC,EAAD;AACb,YAAA;QAAA,IAAG,EAAE,CAAC,WAAH,KAAkB,CAAlB,IAAwB,QAAA,CAAS,EAAE,CAAC,EAAZ,EAAgB,gBAAhB,CAAxB,IAA8D,CAAC,YAAA,IAAgB,EAAE,CAAC,GAAH,GAAS,eAAzB,IAA4C,iBAA7C,CAAjE;UACI,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAZ,GAAsB,GAD1B;SAAA,MAAA;UAGI,YAAA,CAAa,EAAb,EAHJ;;QAIA,IAAqD,EAAE,CAAC,WAAH,KAAoB,oBAAzE;AAAA;AAAA;eAAA,uCAAA;;yBAAA,cAAA,CAAe,EAAG,CAAA,KAAA,CAAlB;AAAA;yBAAA;;MALa;MAOjB,SAAA,GAAY,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,CAAlC,EAAqC,IAArC;AACR,YAAA;QAAA,IAAU,YAAA,IAAgB,0BAAhB,IAA8C,CAAI,aAAc,CAAA,CAAA,CAA1E;AAAA,iBAAA;;QAEA,CAAA,GAAI,aAAc,CAAA,CAAA;QAClB,IAAU,CAAC,CAAC,GAAF,IAAS,cAAT,IAA2B,CAAC,CAAC,WAAF,KAAiB,mBAAtD;AAAA,iBAAA;;QAEA,OAAA,GAAU;AACV;AAAA,aAAA,uCAAA;;UACI,EAAA,GAAK,CAAE,CAAA,KAAA;UACP,cAAA,CAAe,EAAf;UACA,OAAA,IAAW,EAAE,CAAC,EAAE,CAAC;AAHrB;QAIA,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe;QACf,IAAG,CAAC,CAAC,QAAQ,CAAC,MAAX,KAAuB,CAA1B;UACI,YAAA,CAAa,CAAC,CAAC,EAAf,EAAmB,iBAAnB,EAAsC,gBAAtC;UACA,CAAC,CAAC,EAAE,CAAC,WAAL,GAAmB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,CAAC,CAAC;UACjD,IAAG,iBAAH;YACI,qBAAA,CAAsB,CAAtB;YACA,EAAE,QAFN;WAAA,MAAA;YAII,qBAAA,CAAsB,CAAtB,EAJJ;WAHJ;;QAQA,CAAA,GAAI,CAAC,CAAC;AACN,eAAM,CAAN;UACI,CAAC,CAAC,EAAE,CAAC,OAAL,IAAgB;UAChB,CAAA,GAAI,CAAC,CAAC;QAFV;QAGA,CAAC,CAAC,WAAF,GAAgB;QAChB,EAAA,GAAK,gBAAiB,CAAA,CAAC,CAAC,GAAF;QACtB,EAAE,EAAE,CAAC;QACL,IAAG,EAAE,CAAC,aAAH,KAAoB,EAAE,CAAC,OAAO,CAAC,MAAlC;UACI,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,cAApB,EAAoC,aAApC;UACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,EAAE,CAAC,EAAE,CAAC,YAAN,CAAmB,cAAnB;UAChD,EAAE,CAAC,WAAH,GAAiB,oBAHrB;;eAIA,OAAO,CAAC,IAAR,CAAgB,CAAC,CAAC,IAAH,GAAQ,IAAR,GAAY,aAAc,CAAA,EAAA,CAAG,CAAC,EAAE,CAAC,OAAhD;MA/BQ;MAiCZ,iBAAA,GAAoB,SAAC,CAAD;AAChB,YAAA;QAAA,IAA+B,cAA/B;UAAA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB,OAArB;;QACA,KAAA,GAAQ,CAAC,CAAC,EAAE,CAAC,oBAAL,CAA0B,IAA1B;AACR,aAAA,uCAAA;;UAAA,YAAA,CAAa,IAAb,EAAmB,YAAnB,EAAiC,YAAjC;AAAA;QACA,IAAG,CAAI,cAAP;AACI,eAAA,yCAAA;;YAAA,IAAI,CAAC,KAAK,CAAC,OAAX,GAAqB;AAArB;UACA,IAAgC,CAAC,CAAC,GAAlC;YAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB,OAAtB;;iBACA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB,OAHzB;;MAJgB;MASpB,uBAAA,GAA0B,SAAC,CAAD;AACtB,YAAA;QAAA,KAAA,GAAQ,CAAC,CAAC,EAAE,CAAC,oBAAL,CAA0B,IAA1B;AACR,aAAA,uCAAA;;UACI,WAAA,CAAY,IAAZ,EAAqB,gBAAD,GAAkB,GAAlB,GAAqB,YAAzC;UACA,QAAA,CAAS,IAAT,EAAkB,iBAAD,GAAmB,GAAnB,GAAsB,YAAvC;UACA,IAA2B,CAAI,QAAA,CAAS,IAAT,EAAe,YAAf,CAA/B;YAAA,IAAI,CAAC,KAAK,CAAC,OAAX,GAAqB,GAArB;;AAHJ;QAIA,CAAC,CAAC,GAAG,CAAC,WAAN,GAAoB,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,gBAAnB;QACjD,YAAA,CAAa,CAAC,CAAC,GAAf,EAAoB,gBAApB,EAAsC,iBAAtC;QACA,YAAA,CAAa,CAAC,CAAC,EAAf,EAAmB,gBAAnB,EAAqC,iBAArC;eACA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;MATC;MAW1B,WAAA,GAAc,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,CAAlC,EAAqC,IAArC;AACV,YAAA;QAAA,CAAA,GAAI,aAAc,CAAA,CAAA;QAClB,IAAU,CAAI,CAAJ,IAAS,CAAC,CAAC,WAAF,KAAiB,oBAA1B,IAAkD,CAAC,CAAC,GAAF,IAAS,cAA3D,IAA6E,0BAAvF;AAAA,iBAAA;;QAEA,OAAA,GAAU,CAAC,CAAC,EAAE,CAAC;QACf,aAAA,GAAgB,CAAC,CAAC,WAAF,KAAiB;AACjC,aAAS,kGAAT;gBAAiC,CAAC,CAAC,WAAF,KAAiB;;;UAC9C,CAAA,GAAI,aAAc,CAAA,CAAA,GAAE,CAAF;UAClB,iBAAA,CAAkB,CAAlB;AAFJ;QAGA,IAA+B,CAAI,cAAnC;UAAA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB,OAArB;;QACA,IAA6B,aAA7B;UAAA,uBAAA,CAAwB,CAAxB,EAAA;;QACA,IAAG,cAAH;UACI,CAAA,GAAI,CAAC,CAAC;AACN,iBAAM,CAAN;YACI,CAAC,CAAC,EAAE,CAAC,OAAL,IAAgB;YAChB,CAAA,GAAI,CAAC,CAAC;UAFV,CAFJ;;QAKA,CAAC,CAAC,WAAF,GAAgB;QAEhB,EAAA,GAAK,gBAAgB,CAAC,EAAG,CAAA,CAAC,CAAC,GAAF;QACzB,EAAE,CAAC,aAAH;QAEA,IAAU,EAAE,CAAC,aAAH,KAAoB,CAA9B;AAAA,iBAAA;;AAEA;aAAS,uIAAT;gBAAoD,CAAA,GAAI;;;UACpD,EAAA,GAAK,gBAAgB,CAAC,EAAG,CAAA,CAAA;UACzB,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,aAApB,EAAmC,cAAnC;UACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,EAAE,CAAC,EAAE,CAAC,YAAN,CAAmB,cAAnB;uBACjD,EAAE,CAAC,WAAH,GAAiB;AAJrB;;MAvBU;MA6Bd,YAAA,GAAe,SAAC,CAAD;AACX,YAAA;QAAA,KAAA,GAAQ,CAAC,CAAC,EAAE,CAAC,oBAAL,CAA0B,IAA1B;AACR,aAAA,uCAAA;;UACI,YAAA,CAAa,IAAb,EAAmB,YAAnB,EAAiC,YAAjC;AADJ;QAEA,IAAG,CAAI,cAAP;AACI,eAAA,yCAAA;;gBAA+C,CAAI,QAAA,CAAS,IAAT,EAAe,YAAf;cAAnD,IAAI,CAAC,KAAK,CAAC,OAAX,GAAqB;;AAArB;UACA,IAA2B,CAAC,CAAC,WAAF,KAAiB,CAAjB,IAAsB,CAAC,CAAC,WAAF,KAAmB,oBAApE;YAAA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB,GAArB;;UACA,IAA4B,CAAC,CAAC,GAA9B;YAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB,GAAtB;WAHJ;;eAIA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;MARV;MAUf,qBAAA,GAAwB,SAAC,CAAD;AACpB,YAAA;QAAA,KAAA,GAAQ,CAAC,CAAC,EAAE,CAAC,oBAAL,CAA0B,IAA1B;AACR,aAAA,uCAAA;;UACI,WAAA,CAAY,IAAZ,EAAqB,iBAAD,GAAmB,GAAnB,GAAsB,YAA1C;UACA,QAAA,CAAS,IAAT,EAAkB,gBAAD,GAAkB,GAAlB,GAAqB,YAAtC;UACA,IAA2B,CAAI,QAAA,CAAS,IAAT,EAAe,YAAf,CAA/B;YAAA,IAAI,CAAC,KAAK,CAAC,OAAX,GAAqB,GAArB;;AAHJ;QAIA,CAAC,CAAC,GAAG,CAAC,WAAN,GAAoB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,CAAC,CAAC,GAAG,CAAC,YAAN,CAAmB,gBAAnB;QAChD,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAZ,GAAsB;QACtB,YAAA,CAAa,CAAC,CAAC,GAAf,EAAoB,iBAApB,EAAuC,gBAAvC;QACA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;QACrB,YAAA,CAAa,CAAC,CAAC,EAAf,EAAmB,iBAAnB,EAAsC,gBAAtC;QACA,YAAA,CAAa,CAAC,CAAC,EAAf,EAAmB,iBAAnB,EAAsC,gBAAtC;eACA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;MAZD;MAcxB,qBAAA,GAAwB,SAAC,CAAD;AACpB,YAAA;QAAA,KAAA,GAAQ,CAAC,CAAC,EAAE,CAAC,oBAAL,CAA0B,IAA1B;AACR,aAAA,uCAAA;;UACI,WAAA,CAAY,IAAZ,EAAqB,iBAAD,GAAmB,GAAnB,GAAsB,YAA1C;UACA,QAAA,CAAS,IAAT,EAAkB,gBAAD,GAAkB,GAAlB,GAAqB,YAAtC;AAFJ;QAGA,CAAC,CAAC,EAAE,CAAC,WAAL,GAAmB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,CAAC,CAAC,EAAE,CAAC,YAAL,CAAkB,gBAAlB;QAC/C,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;QACrB,YAAA,CAAa,CAAC,CAAC,EAAf,EAAmB,iBAAnB,EAAsC,gBAAtC;eACA,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,GAAqB;MARD;MAUxB,cAAA,GAAiB,SAAC,EAAD;AACb,YAAA;QAAA,MAAA,GAAS;QACT,IAAG,EAAE,CAAC,WAAH,KAAkB,CAArB;UACI,YAAA,CAAa,EAAb;UACA,MAAA;AACA;AAAA,eAAA,uCAAA;;gBAAyD,EAAE,CAAC,WAAH,KAAoB;cAA7E,MAAA,IAAU,cAAA,CAAe,GAAf;;AAAV,WAHJ;SAAA,MAAA;UAKI,YAAA,CAAa,EAAb;UACA,MAAA,GANJ;;AAOA,eAAO;MATM;MAWjB,SAAA,GAAY,SAAC,gBAAD,EAAmB,aAAnB,EAAkC,CAAlC,EAAqC,IAArC;AACR,YAAA;QAAA,CAAA,GAAI,aAAc,CAAA,CAAA;QAClB,IAAU,CAAI,CAAJ,IAAS,CAAC,CAAC,WAAF,KAAiB,mBAA1B,IAAiD,0BAAjD,IAA+E,CAAC,CAAC,GAAF,IAAS,cAAlG;AAAA,iBAAA;;QAEA,aAAA,GAAgB,CAAC,CAAC,WAAF,KAAiB;QACjC,MAAA,GAAS;AACT;AAAA,aAAA,uCAAA;;UACI,MAAA,IAAW,cAAA,CAAe,EAAf,EAAmB,CAAnB;AADf;QAEA,IAAG,aAAH;UACI,IAAG,iBAAH;YACI,qBAAA,CAAsB,CAAtB,EADJ;WAAA,MAAA;YAGI,qBAAA,CAAsB,CAAtB,EAHJ;WADJ;;QAKA,IAAG,cAAH;UACI,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe;UACf,CAAA,GAAI,CAAC,CAAC;AACN,iBAAM,CAAN;YACI,CAAC,CAAC,EAAE,CAAC,OAAL,IAAgB;YAChB,CAAA,GAAI,CAAC,CAAC;UAFV,CAHJ;;QAMA,CAAC,CAAC,WAAF,GAAgB;QAChB,EAAA,GAAK,gBAAgB,CAAC,EAAG,CAAA,CAAC,CAAC,GAAF;QACzB,EAAE,EAAE,CAAC;QACL,IAAG,EAAE,CAAC,aAAH,KAAoB,EAAE,CAAC,OAAO,CAAC,MAAlC;UACI,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,cAApB,EAAoC,aAApC;UACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,EAAE,CAAC,EAAE,CAAC,YAAN,CAAmB,cAAnB;iBAChD,EAAE,CAAC,WAAH,GAAiB,oBAHrB;;MAtBQ;MA2BZ,UAAA,GAAa,SAAC,aAAD,EAAgB,OAAhB,EAAyB,KAAzB,EAAgC,IAAhC,EAAsC,QAAtC,EAAgD,IAAhD;AACT,YAAA;QAAA,IAAU,IAAI,CAAC,eAAL,IAAwB,IAAI,CAAC,qBAAvC;AAAA,iBAAA;;QAEA,GAAA,GAAM;QACN,IAA4B,OAAO,IAAP,KAAe,QAA3C;UAAA,GAAA,GAAM,KAAK,CAAC,OAAN,CAAc,IAAd,EAAN;;QACA,CAAA,GAAI,KAAK,CAAC,MAAN,GAAa;QACjB,IAAU,GAAA,GAAM,CAAN,IAAW,CAAA,GAAI,GAAzB;AAAA,iBAAA;;AAEA;aAAS,wGAAT;gBAAuB,CAAA,IAAK,IAAI,CAAC;;;UAC7B,EAAA,GAAK,aAAc,CAAA,CAAA;UACnB,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,aAApB,EAAmC,cAAnC;UACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,KAAM,CAAA,CAAA;UACvD,EAAE,CAAC,WAAH,GAAiB;;;AAEjB;AAAA;iBAAA,uCAAA;;kBAAuE,CAAC,CAAC,WAAF,KAAmB,oBAAnB,IAA4C,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAX,KAAwB,MAApE,IAA+E,CAAC,CAAC,MAAF,GAAW;8BAAjK,QAAA,CAAS,aAAT,EAAwB,OAAxB,EAAiC,CAAC,CAAC,IAAnC,EAAyC,IAAzC;;AAAA;;;AANJ;;MARS;MAgBb,QAAA,GAAW,SAAC,aAAD,EAAgB,WAAhB,EAA6B,KAA7B,EAAoC,IAApC,EAA0C,MAA1C,EAAkD,IAAlD;AACP,YAAA;QAAA,IAAU,IAAI,CAAC,eAAL,IAAwB,IAAI,CAAC,qBAAvC;AAAA,iBAAA;;QAEA,GAAA,GAAM;QACN,IAA4B,OAAO,IAAP,KAAe,QAA3C;UAAA,GAAA,GAAM,KAAK,CAAC,OAAN,CAAc,IAAd,EAAN;;QACA,IAAU,GAAA,GAAM,CAAN,IAAW,GAAA,KAAO,KAAK,CAAC,MAAN,GAAa,CAAzC;AAAA,iBAAA;;AAEA,aAAS,wFAAT;gBAAuB,CAAA,GAAI,IAAI,CAAC;;;UAC5B,EAAA,GAAK,aAAc,CAAA,CAAA;UACnB,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,cAApB,EAAoC,aAApC;UACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,KAAM,CAAA,CAAA;UACtD,EAAE,CAAC,WAAH,GAAiB;AAEjB;AAAA,eAAA,uCAAA;;gBAAmE,CAAC,CAAC,MAAF,GAAW;cAA9E,MAAA,CAAO,aAAP,EAAsB,WAAtB,EAAmC,CAAC,CAAC,IAArC;;AAAA;AANJ;QAQA,EAAE;AACF;eAAM,GAAA,GAAM,KAAK,CAAC,MAAN,GAAa,CAAnB,IAAyB,GAAA,GAAM,IAAI,CAAC,WAA1C;UACI,EAAA,GAAK,aAAc,CAAA,GAAA;UACnB,IAAG,EAAE,CAAC,aAAH,KAAoB,CAAvB;YACI,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,aAApB,EAAmC,cAAnC;YACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,cAAN,GAAuB,GAAvB,GAA6B,KAAM,CAAA,GAAA;YACvD,EAAE,CAAC,WAAH,GAAiB,qBAHrB;WAAA,MAIK,IAAG,EAAE,CAAC,aAAH,KAAoB,EAAE,CAAC,KAAK,CAAC,MAAhC;YACD,YAAA,CAAa,EAAE,CAAC,EAAhB,EAAoB,cAApB,EAAoC,aAApC;YACA,EAAE,CAAC,EAAE,CAAC,WAAN,GAAoB,GAAA,GAAM,aAAN,GAAsB,GAAtB,GAA4B,KAAM,CAAA,GAAA;YACtD,EAAE,CAAC,WAAH,GAAiB,oBAHhB;;uBAIL,EAAE;QAVN,CAAA;;MAhBO;MA6BX,IAAA,GAAO,SAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B;AACH,YAAA;QAAA,gBAAA,GAAmB;QACnB,aAAA,GAAgB;QAChB,gBAAA,GAAmB;QACnB,aAAA,GAAgB;QAEhB,IAAmD,QAAQ,CAAC,MAAT,GAAkB,CAAlB,IAAwB,OAAO,CAAC,MAAR,GAAiB,CAA5F;UAAA,UAAA,GAAa,WAAA,CAAY,OAAZ,EAAqB,aAArB,EAAb;;QACA,IAAmD,QAAQ,CAAC,MAAT,GAAkB,CAAlB,IAAwB,OAAO,CAAC,MAAR,GAAiB,CAA5F;UAAA,UAAA,GAAa,WAAA,CAAY,OAAZ,EAAqB,aAArB,EAAb;;QAEA,MAAA,GAAS,aAAA,CAAc,OAAd,EAAuB,UAAvB,EAAmC,IAAnC,EAAyC;UAAC,KAAA,EAAO,gBAAR;SAAzC;QAET,KAAA,GAAQ,aAAA,CAAc,OAAd;QACR,MAAM,CAAC,WAAP,CAAmB,KAAnB;QAEA,IAAG,QAAQ,CAAC,MAAT,GAAkB,CAArB;UACI,qBAAA,CAAsB,KAAtB,EAA6B,gBAA7B,EAA+C,QAA/C,EAAyD,QAAzD;UACA,IAAA,GAAO;YAAA,OAAA,EAAS,CAAT;;AACP;AAAA,eAAA,uCAAA;;YAAA,cAAA,CAAe,gBAAf,EAAiC,aAAjC,EAAgD,UAAW,CAAA,KAAA,CAA3D,EAAmE,QAAnE,EAA6E,QAA7E,EAAuF,IAAvF;AAAA;UACA,gCAAA,CAAiC,gBAAjC,EAAmD,aAAnD,EAAkE,QAAlE,EAJJ;;QAMA,IAAG,QAAQ,CAAC,MAAT,GAAkB,CAArB;UACI,qBAAA,CAAsB,KAAtB,EAA6B,gBAA7B,EAA+C,QAA/C,EAAyD,QAAzD;UACA,IAAgE,QAAQ,CAAC,MAAT,KAAmB,CAAnF;YAAA,oBAAA,CAAqB,gBAAgB,CAAC,EAAtC,EAA0C,QAA1C,EAAoD,QAApD,EAAA;WAFJ;;QAIA,IAAG,QAAQ,CAAC,MAAT,GAAkB,CAArB;UACI,oBAAA,CAAqB,gBAAiB,CAAA,CAAA,CAAE,CAAC,EAAzC,EAA6C,QAA7C,EAAuD,QAAvD,EADJ;;QAGA,KAAA,GAAQ,aAAA,CAAc,OAAd;QACR,MAAM,CAAC,WAAP,CAAmB,KAAnB;QACA,IAAA,GAAO;UAAA,OAAA,EAAS,CAAT;;QACP,IAAuI,QAAQ,CAAC,MAAT,GAAkB,CAAzJ;AAAA;AAAA,eAAA,yCAAA;;YAAA,cAAA,CAAe,KAAf,EAAsB,gBAAtB,EAAwC,aAAxC,EAAuD,UAAW,CAAA,KAAA,CAAlE,EAA0E,QAA1E,EAAoF,QAApF,EAA8F,IAA9F;AAAA,WAAA;;QACA,gCAAA,CAAiC,gBAAjC,EAAmD,aAAnD,EAAkE,QAAlE;QAEA,EAAA,GAAK,oBAAA,CAAqB,QAArB,EAA+B,QAA/B;QACL,IAAoC,QAAQ,CAAC,MAAT,GAAkB,CAAtD;UAAA,cAAA,CAAe,EAAf,EAAmB,aAAnB,EAAA;;QACA,eAAA,CAAgB,KAAhB,EAAuB,EAAvB;QAEA,MAAM,CAAC,YAAP,CAAoB,cAApB,EAAoC,OAAO,CAAC,MAA5C;QACA,MAAM,CAAC,YAAP,CAAoB,cAApB,EAAoC,OAAO,CAAC,MAA5C;QACA,MAAM,CAAC,KAAK,CAAC,OAAb,GAAuB;AAEvB,eAAO;MAzCJ;AA2CP,aAAO,IAAA,CAAK,QAAL,EAAe,OAAf,EAAwB,QAAxB,EAAkC,OAAlC;IA7uBQ;IA+uBnB,CAAC,CAAC,cAAc,CAAC,kBAAjB,GACI;MAAA,qBAAA,EAAwB,SAAC,OAAD,EAAU,IAAV;eAAmB,gBAAA,CAAiB,OAAjB,EAA0B,IAA1B;MAAnB,CAAxB;MACA,+BAAA,EAAmC,SAAC,OAAD,EAAU,IAAV;eAAmB,CAAA,CAAE,gBAAA,CAAiB,OAAjB,EAA0B,IAA1B,CAAF,CAAiC,CAAC,QAAlC,CAAA;MAAnB,CADnC;MAEA,6BAAA,EAAiC,SAAC,OAAD,EAAU,IAAV;eAAmB,CAAA,CAAE,gBAAA,CAAiB,OAAjB,EAA0B,IAA1B,CAAF,CAAiC,CAAC,OAAlC,CAA0C,SAA1C,EAAqD,IAArD;MAAnB,CAFjC;MAGA,iCAAA,EAAqC,SAAC,OAAD,EAAU,IAAV;eAAmB,CAAA,CAAE,gBAAA,CAAiB,OAAjB,EAA0B,IAA1B,CAAF,CAAiC,CAAC,OAAlC,CAA0C,YAA1C,EAAwD,IAAxD;MAAnB,CAHrC;MAIA,iCAAA,EAAoC,SAAC,OAAD,EAAU,IAAV;eAAmB,CAAA,CAAE,gBAAA,CAAiB,OAAjB,EAA0B,IAA1B,CAAF,CAAiC,CAAC,OAAlC,CAA0C,YAA1C,EAAwD,IAAxD;MAAnB,CAJpC;;IAYJ,QAAA,GAAW,CAAC,CAAC,cAAc,CAAC,YAAjB,CAA8B;MAAA,kBAAA,EAAmB,CAAnB;MAAsB,MAAA,EAAQ,GAA9B;MAAmC,MAAA,EAAQ,GAA3C;KAA9B;IACX,mBAAA,GAAsB,CAAC,CAAC,cAAc,CAAC;IAEvC,2BAAA,GACI;MAAA,UAAA,EAAY,SAAC,OAAD,EAAU,IAAV,EAAsB,SAAtB;;UAAU,OAAK;;;UAAO,YAAU;;eAAa,SAAA;AAAU,cAAA;UAAT;iBAAS,SAAC,IAAD,EAAO,MAAP,EAAe,MAAf;YAC/D,IAAe,OAAO,MAAP,KAAiB,WAAhC;cAAA,MAAA,GAAS,GAAT;;YACA,IAAe,OAAO,MAAP,KAAiB,WAAhC;cAAA,MAAA,GAAS,GAAT;;mBACA;cAAA,QAAA,EAAU;gBAAC,GAAA,EAAK,CAAC,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAD,EAAqB,EAArB,CAAN;gBAAgC,GAAA,EAAK,CAAC,EAAD,EAAK,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAL,CAArC;eAAgE,CAAA,IAAA,CAA1E;cACA,KAAA,EAAO,OAAA,aAAQ,CAAR,CAAA,CAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,CADP;cAEA,IAAA,EAAM,SAAC,MAAD;uBAAY,IAAC,CAAA,KAAK,CAAC,IAAP,CAAY,MAAZ;cAAZ,CAFN;cAGA,MAAA,EAAQ,SAHR;cAIA,KAAA,EAAO,SAAA;uBAAG,IAAC,CAAA,KAAK,CAAC,KAAP,CAAA,CAAA,GAAiB,IAAI,CAAC,aAAL,aAAmB,IAAC,CAAA,QAApB,CAAgC,CAAC,KAAK,CAAC,KAAvC,CAAA;cAApB,CAJP;cAKA,SAAA,EAAW,OAAA,aAAQ,CAAR,CAAA,CAAA,CAAe,CAAC,SAL3B;;UAH+D;QAAV;MAA7C,CAAZ;;IAUJ,CAAC,CAAC,cAAc,CAAC,2BAAjB,GAA+C;WAE/C,CAAC,CAAC,cAAc,CAAC,oBAAjB,GAA2C,CAAA,SAAC,GAAD,EAA4B,IAA5B;aACvC;QAAA,+BAAA,EAAwC,IAAI,CAAC,UAAL,CAAgB,GAAG,CAAC,GAAJ,CAAA,CAAhB,EAA2B,KAA3B,EAAkC,QAAlC,CAAxC;QACA,kCAAA,EAAwC,IAAI,CAAC,UAAL,CAAgB,GAAG,CAAC,GAAJ,CAAA,CAAhB,EAA2B,KAA3B,EAAkC,QAAlC,CADxC;QAEA,iCAAA,EAAwC,IAAI,CAAC,UAAL,CAAgB,GAAG,CAAC,KAAJ,CAAA,CAAhB,EAA6B,KAA7B,EAAoC,QAApC,CAFxC;QAGA,oCAAA,EAAwC,IAAI,CAAC,UAAL,CAAgB,GAAG,CAAC,KAAJ,CAAA,CAAhB,EAA6B,KAA7B,EAAoC,QAApC,CAHxC;;IADuC,CAAA,CAAH,CAAU,mBAAV,EAAsC,2BAAtC;EAvzB7B,CAAf;AATA","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        isRowDisable = opts.rowSubtotalDisplay?.disableSubtotal\r\n        rowDisableAfter = if typeof opts.rowSubtotalDisplay?.disableAfter isnt 'undefined' then opts.rowSubtotalDisplay.disableAfter else 9999\r\n        if typeof opts.rowSubtotalDisplay?disableFrom is 'undefined'\r\n            rowDisableFrom = if isRowDisable then 0 else rowDisableAfter + 1\r\n        else\r\n            rowDisableFrom = opts.rowSubtotalDisplay.disableFrom\r\n        isRowHideOnExpand = opts.rowSubtotalDisplay?.hideOnExpand\r\n        isRowDisableExpandCollapse = opts.rowSubtotalDisplay?.disableExpandCollapse\r\n        isDisplayOnTop = if typeof opts.rowSubtotalDisplay?.displayOnTop isnt 'undefined' then opts.rowSubtotalDisplay.displayOnTop else true\r\n        isColDisable = opts.colSubtotalDisplay?.disableSubtotal\r\n        isColHideOnExpand = opts.colSubtotalDisplay?.hideOnExpand\r\n        isColDisableExpandCollapse = opts.colSubtotalDisplay?.disableExpandCollapse\r\n        colDisableAfter = if typeof opts.colSubtotalDisplay?.disableAfter isnt 'undefined' then opts.colSubtotalDisplay.disableAfter else 9999\r\n        if typeof opts.colSubtotalDisplay?disableFrom is 'undefined'\r\n            colDisableFrom = if isColDisable then 0 else colDisableAfter + 1\r\n        else\r\n            colDisableFrom = opts.colSubtotalDisplay.disableFrom\r\n        isDisplayOnRight = if typeof opts.colSubtotalDisplay?.displayOnRight isnt 'undefined' then opts.rowSubtotalDisplay.displayOnRight else true\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        colsCollapseAt = if typeof opts.collapseColsAt isnt 'undefined' then opts.collapseColsAt else 9999\r\n        rowsCollapseAt = if typeof opts.collapseRowsAt isnt 'undefined' then opts.collapseRowsAt else 9999\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        isDisplayOnTop = false;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            for own a, v of attrs\r\n                e.setAttribute a, v \r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            return tree\r\n\r\n        setColInitParams = (col) ->\r\n            init = \r\n                colArrow: arrowExpanded\r\n                colClass: classColExpanded\r\n                colClickStatus: clickStatusExpanded\r\n            if col >= colsCollapseAt\r\n                init =\r\n                    colArrow: arrowCollapsed\r\n                    colClass: classColCollapsed\r\n                    colClickStatus: clickStatusCollapsed\r\n            if col >= colDisableFrom\r\n                init =\r\n                    colArrow: \"\"\r\n            return init\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            init = setColInitParams col\r\n            if col < colAttrs.length-1\r\n                className += \" \" + init.colClass\r\n                textContent = \" \" + init.colArrow + \" \" + colAttr if not (isColDisableExpandCollapse or isColDisable or col > colDisableAfter)\r\n            th = createElement \"th\", className, textContent\r\n            th.setAttribute \"data-colAttr\", colAttr\r\n            tr.appendChild th\r\n            colHeaderHeaders.push\r\n                tr: tr,\r\n                th: th,\r\n                clickStatus: init.colClickStatus,\r\n                expandedCount: 0,\r\n                nodes: [],\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createElement \"th\", null, null, {\r\n                    colspan: rowAttrs.length,\r\n                    rowspan: colAttrs.length}\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            n = colAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute \"data-colAttr\"\r\n\r\n        buildColHeader = (colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs, node) ->\r\n            # DF Recurse\r\n            for chKey in h.children\r\n                buildColHeader colHeaderHeaders, colHeaderCols, h[chKey], rowAttrs, colAttrs, node\r\n            # Process\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount if h.col < colsCollapseAt\r\n            hh.nodes.push h\r\n\r\n            h.node = node.counter\r\n            init = setColInitParams h.col\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{init.colClass}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            if h.children.length is 0 and rowAttrs.length isnt 0\r\n                h.th.rowSpan = 2\r\n            if h.leaves > 1 and not (isColDisable or h.col >= colDisableFrom)\r\n                if not isColDisableExpandCollapse # and h.parent?.children.length isnt 1\r\n                    h.th.textContent = \"#{init.colArrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        toggleCol colHeaderHeaders, colHeaderCols, parseInt event.target.getAttribute \"data-colnode\"\r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller pvtColSubtotal\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    h.sTh.style.display = \"none\" if (isColHideOnExpand and h.col < colsCollapseAt) or h.col > colsCollapseAt\r\n                    firstChild.tr.appendChild h.sTh\r\n                    h.th.colSpan++\r\n            # h.sTh = firstChild.sTh if h.children.length is 1\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = init.colClickStatus\r\n            hh.tr.appendChild h.th\r\n            h.tr = hh.tr\r\n            colHeaderCols.push h\r\n            node.counter++\r\n\r\n        setRowInitParams = (col) ->\r\n            init = \r\n                rowArrow: arrowExpanded\r\n                rowClass: classRowExpanded\r\n                rowClickStatus: clickStatusExpanded\r\n            if col >= rowsCollapseAt\r\n                init =\r\n                    rowArrow: arrowCollapsed\r\n                    rowClass: classRowCollapsed\r\n                    rowClickStatus: clickStatusCollapsed\r\n            if col >= rowDisableFrom\r\n                init = rowArrow: \"\"\r\n            return init\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr if not (isRowDisableExpandCollapse or i >= rowDisableFrom or i >= rowsCollapseAt)\r\n                th = createElement \"th\", className, textContent\r\n                th.setAttribute \"data-rowAttr\", rowAttr\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push \r\n                    th: th\r\n                    clickStatus: if i < rowsCollapseAt then clickStatusExpanded else clickStatusCollapsed\r\n                    expandedCount: 0\r\n                    headers: []\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            n = rowAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute \"data-rowAttr\"\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals, {rowspan: rowspan}\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs, node) ->\r\n            # DF Recurse\r\n            for chKey in h.children\r\n                buildRowHeader tbody, rowHeaderHeaders, rowHeaderRows, h[chKey], rowAttrs, colAttrs, node\r\n\r\n            # Process\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount if h.col < rowsCollapseAt\r\n            hh.headers.push h\r\n\r\n            h.node = node.counter\r\n            init = setRowInitParams h.col\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"row#{h.row} rowcol#{h.col} #{classRowShow}\"\r\n            addClass h.th, \"pvtRowSubtotal\" if h.th.children.length isnt 0\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n\r\n            if (isDisplayOnTop and h.children.length is 1) or (not isDisplayOnTop and h.children.length isnt 0)\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"pvtRowSubtotal row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n\r\n            if h.leaves > 1 and not (isRowDisable or h.col >= rowDisableFrom)\r\n                if not isRowDisableExpandCollapse\r\n                    addClass h.th, init.rowClass\r\n                    h.th.textContent = \"#{init.rowArrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        toggleRow rowHeaderHeaders, rowHeaderRows, parseInt event.target.getAttribute \"data-rownode\"\r\n\r\n                if h.children.length > 1\r\n                    h.sTh = createElement \"th\", \"pvtRowLabelFiller pvtRowSubtotal row#{h.row} rowcol#{h.col} #{init.rowClass}\"\r\n                    h.sTh.setAttribute \"data-rownode\", h.node\r\n                    h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                    h.sTh.style.display = \"none\" if (isRowHideOnExpand and h.col < rowsCollapseAt) or h.col > rowsCollapseAt\r\n                    h.th.rowSpan++\r\n\r\n                    addClass h.tr, init.rowClass\r\n                    if isDisplayOnTop\r\n                        h.tr.appendChild h.sTh\r\n                    else\r\n                        h.sTr = createElement \"tr\", \"pvtRowSubtotal row#{h.row} #{init.rowClass}\"\r\n                        h.sTr.appendChild h.sTh\r\n                        tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n            else\r\n                tbody.appendChild h.tr if h.children.length is 0\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = init.rowClickStatus\r\n            rowHeaderRows.push h\r\n            node.counter++\r\n\r\n\r\n        buildValues = (tbody, rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (rowHeader.col > rowsCollapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt))) or (colHeader.col > colsCollapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt or colHeader.col > colsCollapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > colsCollapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < colsCollapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColExpanded} #{classColHide}\"\r\n                .addClass \"#{classColCollapsed} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" \" + arrowCollapsed + \" \" + h.text\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            for chKey in ch.children\r\n                collapseChildCol ch[chKey], h\r\n\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c, opts) ->\r\n            return if isColDisable or isColDisableExpandCollapse or not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.col >= colDisableFrom or h.clickStatus is clickStatusCollapsed\r\n\r\n            colSpan = h.th.colSpan - 1\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                collapseChildCol ch, h\r\n\r\n            collapseShowColSubtotal h\r\n\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2] when i <= colDisableAfter\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute \"data-colAttr\"\r\n                    colHeaderHeader.clickStatus = clickStatusCollapsed\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            h.th.style.display = \"\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.style.display = \"\"\r\n            ++h.th.colSpan\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch) ->\r\n            if ch.descendants != 0 and hasClass(ch.th, classColExpanded) and (isColDisable or ch.col > colDisableAfter or isColHideOnExpand)\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n            expandChildCol ch[chKey] for chKey in ch.children if ch.clickStatus isnt clickStatusCollapsed\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c, opts) ->\r\n            return if isColDisable or isColDisableExpandCollapse or not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.col >= colDisableFrom or h.clickStatus is clickStatusExpanded\r\n\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n            if h.children.length isnt 0\r\n                replaceClass h.th, classColCollapsed, classColExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.text\r\n                if isColHideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colspan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount is hh.headers.length\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-colAttr\"\r\n                hh.clickStatus = clickStatusExpanded\r\n            console.warn \"#{h.text}: #{colHeaderCols[38].th.colSpan}\"\r\n\r\n        hideDescendantRow = (d) ->\r\n            d.tr.style.display = \"none\" if isDisplayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowCollapsed + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            replaceClass h.sTh, classRowExpanded, classRowCollapsed\r\n            replaceClass h.tr, classRowExpanded, classRowCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusCollapsed or h.col >= rowDisableFrom or isRowDisableExpandCollapse \r\n\r\n            rowSpan = h.th.rowSpan\r\n            isRowSubtotal = h.descendants != 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r-i]\r\n                hideDescendantRow d\r\n            h.th.style.display = \"none\" if not isDisplayOnTop\r\n            collapseShowRowSubtotal h if isRowSubtotal\r\n            if isDisplayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            hh.expandedCount--\r\n\r\n            return if hh.expandedCount != 0\r\n\r\n            for j in [h.col..rowHeaderHeaders.hh.length-2] when j < rowDisableFrom\r\n                hh = rowHeaderHeaders.hh[j]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = clickStatusCollapsed\r\n\r\n        showChildRow = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowExpanded + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classRowCollapsed, classRowExpanded\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classRowCollapsed, classRowExpanded\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch) ->\r\n            nShown = 0\r\n            if ch.descendants != 0\r\n                showChildRow ch\r\n                nShown++\r\n                nShown += expandChildRow gch for gch in ch.children when ch.clickStatus isnt clickStatusCollapsed\r\n            else\r\n                showChildRow ch\r\n                nShown++\r\n            return nShown\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusExpanded or isRowDisableExpandCollapse or h.col >= rowDisableFrom\r\n\r\n            isRowSubtotal = h.descendants != 0\r\n            nShown = 0\r\n            for ch in h.children\r\n                nShown +=  expandChildRow ch, 0\r\n            if isRowSubtotal\r\n                if isRowHideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if isDisplayOnTop\r\n                h.th.rowSpan = nShown\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += nShown\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.headers.length\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = clickStatusExpanded\r\n\r\n        collapseAt = (headerHeaders, headers, attrs, attr, collapse, opts) ->\r\n            return if opts.disableSubtotal or opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            n = attrs.length-2\r\n            return if idx < 0 or n < idx\r\n\r\n            for i in [idx..n] when i <= opts.disableFrom\r\n                hh = headerHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[i]\r\n                hh.clickStatus = clickStatusCollapsed\r\n\r\n                collapse headerHeaders, headers, h.node, opts for h in hh.headers when h.clickStatus isnt clickStatusCollapsed and h.th.style.display isnt \"none\" and h.leaves > 1\r\n\r\n        expandAt = (headerHeaders, headerNodes, attrs, attr, expand, opts) ->\r\n            return if opts.disableSubtotal or opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            return if idx < 0 or idx == attrs.length-1\r\n\r\n            for i in [0..idx] when i < opts.disableFrom\r\n                hh = headerHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + attrs[i]\r\n                hh.clickStatus = clickStatusExpanded\r\n\r\n                expand headerHeaders, headerNodes, h.node for h in hh.headers when h.leaves > 1\r\n\r\n            ++idx\r\n            while idx < attrs.length-1 and idx < opts.disableFrom\r\n                hh = headerHeaders[idx]\r\n                if hh.expandedCount == 0\r\n                    replaceClass hh.th, classExpanded, classCollapsed\r\n                    hh.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[idx]\r\n                    hh.clickStatus = clickStatusCollapsed\r\n                else if hh.expandedCount == hh.nodes.length\r\n                    replaceClass hh.th, classCollapsed, classExpanded\r\n                    hh.th.textContent = \" \" + arrowExpanded + \" \" + attrs[idx]\r\n                    hh.clickStatus = clickStatusExpanded\r\n                ++idx\r\n\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            rowHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length > 0 and rowKeys.length > 0\r\n            colHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length > 0 and colKeys.length > 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length > 0\r\n                buildColHeaderHeaders thead, colHeaderHeaders, rowAttrs, colAttrs\r\n                node = counter: 0\r\n                buildColHeader colHeaderHeaders, colHeaderCols, colHeaders[chKey], rowAttrs, colAttrs, node for chKey in colHeaders.children\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n\r\n            if rowAttrs.length > 0\r\n                buildRowHeaderHeaders thead, rowHeaderHeaders, rowAttrs, colAttrs\r\n                buildRowTotalsHeader rowHeaderHeaders.tr, rowAttrs, colAttrs if colAttrs.length == 0\r\n\r\n            if colAttrs.length > 0\r\n                buildRowTotalsHeader colHeaderHeaders[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            node = counter: 0\r\n            buildRowHeader tbody, rowHeaderHeaders, rowHeaderRows, rowHeaders[chKey], rowAttrs, colAttrs, node for chKey in rowHeaders.children if rowAttrs.length > 0\r\n            buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            # buildValues tbody, rowHeaderRows, colHeaderCols\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colHeaderCols if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    #\r\n    # \r\n    # Aggregators\r\n    # \r\n    #\r\n\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}