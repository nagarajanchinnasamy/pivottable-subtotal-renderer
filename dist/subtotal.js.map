{"version":3,"file":"subtotal.js","sources":["subtotal.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            console.warn tree\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            ah.th.onclick = (event) ->\r\n                event = event || window.event\r\n                ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild ah.th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        setHeaderAttribs = (col, label, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: arrowExpanded\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: \"#{classExpanded} \"\r\n            hProps.arrow = \"\" if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n            hProps.textContent = \"#{hProps.arrow} #{label}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom and not opts.colSubtotalDisplay.disableExpandCollapse\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1 # if h.col < opts.colSubtotalDisplay.collapseAt\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    h.sTh.style.display = \"none\" if (opts.colSubtotalDisplay.hideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt)\r\n                    h[h.children[0]].tr.appendChild h.sTh if h.children.length isnt 0\r\n                    h.th.colSpan++\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n                tbody.appendChild h.tr if h.leaves is 0\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount if h.col < opts.rowSubtotalDisplay.collapseAt\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    ++ah.expandables\r\n                    addClass h.th, hProps.class\r\n                    h.th.textContent = \"#{hProps.arrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                h.sTh.style.display = \"none\" if (opts.rowSubtotalDisplay.hideOnExpand and h.col < opts.rowSubtotalDisplay.collapseAt) or h.col > opts.rowSubtotalDisplay.collapseAt\r\n                h.th.rowSpan++\r\n\r\n                addClass h.tr, hProps.class\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.sTr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders) ->\r\n            for rowHeader in attrHeaders\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in attrHeaders\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt))) or (colHeader.col > opts.colSubtotalDisplay.collapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt or colHeader.col > opts.colSubtotalDisplay.collapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders) ->\r\n            for h in attrHeaders when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > opts.colSubtotalDisplay.collapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n                .not \".#{classColHide}, .#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            collapseShowColSubtotal h\r\n            if hasClass h.th, classColShow\r\n                p = h.parent\r\n                while p\r\n                    p.th.colSpan -= colSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColShow}\" \r\n                .addClass \"#{classExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            h.th.style.display = \"\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColHide}\"\r\n                .addClass \"#{classExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            if ch.leaves isnt 0 and ch.clickStatus is clickStatusCollapsed and (ch.col >= opts.disableFrom or opts.hideOnExpand)\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if ch.clickStatus is clickStatusExpanded\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n            if opts.hideOnExpand\r\n                expandHideColSubtotal h\r\n                --colspan\r\n            else\r\n                expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideDescendantRow = (d, opts) ->\r\n            d.tr.style.display = \"none\" if opts.displayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classExpanded, classCollapsed\r\n            h.th.style.display = \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.rowSpan = 1\r\n            replaceClass h.sTh, classExpanded, classCollapsed\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.tr, classExpanded, classCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideDescendantRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            rowSpan = h.th.rowSpan - 1\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (h, opts) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classCollapsed, classExpanded\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classCollapsed, classExpanded\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            showChildRow ch, opts\r\n            expandChildRow ch[chKey], opts for chKey in ch.children when ch.clickStatus is clickStatusExpanded\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            rowSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n                rowSpan += ch.th.rowSpan\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                h.th.rowSpan = rowSpan+1\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = attrs.length-2\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            # buildValues tbody, colAttrHeaders, rowAttrHeaders\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colAttrHeaders if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}