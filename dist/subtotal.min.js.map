{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColHide","classColShow","classCollapsed","classExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideChildCol","hideChildRow","main","processKeys","removeClass","replaceClass","setAttributes","setHeaderAttribs","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableFrom","disableSubtotal","disableAfter","collapseAt","collapseRowsAt","colSubtotalDisplay","collapseColsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","collapse","expand","hProps","class","chKey","counter","colSpan","rowSpan","hideOnExpand","sTh","style","display","tbody","firstChild","insertBefore","displayOnTop","sTr","colAttrHeaders","rowAttrHeaders","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","setRowInitParams","format","setColInitParams","colClass","rowClass","rowDisableFrom","isRowHideOnExpand","isColDisable","colDisableAfter","isColHideOnExpand","data-value","data-rownode","data-colnode","isDisplayOnTop","data-row","data-rowcol","clsNames","data-for","result","collapsible","Math","min","ch","closest","find","css","exclude","not","p","cell","cells","getElementsByTagName","diffRowSpan","ref2","colAxisHeaders","colKeyHeaders","rowAxisHeaders","rowKeyHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        # opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\r\n                ah.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild ah.th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        setHeaderAttribs = (h, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: \" #{arrowExpanded} \"\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: classExpanded\r\n            hProps.arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.leaves is 1\r\n            hProps.textContent = \"#{hProps.arrow}#{h.text}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\r\n                        h.th.onclick = (event) ->\r\n                            event = event || window.event\r\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    if opts.colSubtotalDisplay.hideOnExpand\r\n                        h.sTh.style.display = \"none\"\r\n                        addClass h.sTh, classColHide\r\n                    h[h.children[0]].tr.appendChild h.sTh\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                h.tr.appendChild h.th\r\n                if h.leaves is 0\r\n                    tbody.appendChild h.tr\r\n                else\r\n                    tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount\r\n                ++ah.expandables\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                h.sTh.style.display = \"none\" if opts.rowSubtotalDisplay.hideOnExpand\r\n\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.th.rowSpan += 1 if not opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                    h.sTr.style.display = \"none\" if opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n\r\n            h.th.rowSpan++ if h.leaves > 1\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders) ->\r\n            for rowHeader in attrHeaders\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in attrHeaders\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt))) or (colHeader.col > opts.colSubtotalDisplay.collapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt or colHeader.col > opts.colSubtotalDisplay.collapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders) ->\r\n            for h in attrHeaders when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > opts.colSubtotalDisplay.collapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\r\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            for i in [col..collapsible]\r\n                ah = axisHeaders.ah[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                collapseAxisHeaders axisHeaders, col, opts\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseHiddenColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n            \r\n        collapseShowColSubtotal = (h, opts) ->\r\n            exclude = \".#{classRowHide}\"\r\n            exclude += \", .#{classColHide}\" if not opts.hideOnExpand\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n                .not exclude\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideChildCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            if h.col < opts.disableFrom\r\n                if hasClass h.th, classColHide\r\n                    collapseHiddenColSubtotal h, opts\r\n                else \r\n                    collapseShowColSubtotal h, opts\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColShow}\" \r\n                .addClass \"#{classExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColHide}\"\r\n                .addClass \"#{classExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            showChildCol ch\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classColShow, classColHide\r\n                ch.sTh.style.display = \"none\"\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if h.col < opts.disableFrom\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colSpan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideChildRow = (ch, opts) ->\r\n            ch.tr.style.display = \"none\"\r\n            ch.sTr.style.display = \"none\" if ch.sTr\r\n            ch.th.style.display = \"none\"\r\n            ch.sTh.style.display = \"none\" if ch.sTh\r\n            tr = if ch.sTr then ch.sTr else ch.tr\r\n            cells = tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n\r\n        collapseShowRowSubtotal = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            h.sTr.style.display = \"\" if h.sTr\r\n            h.th.style.display = \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.rowSpan = if opts.displayOnTop then 1 else 2\r\n            replaceClass h.th, classExpanded, classCollapsed\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n                replaceClass h.sTh, classExpanded, classCollapsed\r\n            tr = if h.sTr then h.sTr else h.tr\r\n            cells = tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideChildRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            rowSpan = h.th.rowSpan\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h, opts\r\n            diffRowSpan = rowSpan - h.th.rowSpan \r\n            p = h.parent\r\n            while p\r\n                p.th.rowSpan -= diffRowSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            h.th.style.display = \"\"\r\n            tr = h.tr\r\n            if h.leaves > 1 and h.col < opts.disableFrom and ((h.clickStatus is clickStatusExpanded and not opts.hideOnExpand) or h.clickStatus is clickStatusCollapsed) \r\n                h.sTr.style.display = \"\" if h.sTr\r\n                h.sTh.style.display = \"\" if h.sTh\r\n                tr = h.sTr\r\n            cells = tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        expandShowRowSubtotal = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.sTr.style.display = \"\" if h.sTr\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classCollapsed, classExpanded\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.sTh.style.display = \"\" if h.sTh\r\n            replaceClass h.sTh, classCollapsed, classExpanded\r\n            tr = if h.sTr then h.sTr else h.tr\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        expandHideRowSubtotal = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.sTr.style.display = \"none\" if h.sTr\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.sTh.style.display = \"none\" if h.sTh\r\n            tr = if h.sTr then h.sTr else h.tr\r\n            cells = tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classExpanded} #{classRowHide}\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            expandChildRow ch[chKey], opts for chKey in ch.children if ch.clickStatus is clickStatusExpanded\r\n            showChildRow ch, opts\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            rowSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n                rowSpan += ch.th.rowSpan\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h, opts\r\n                else\r\n                    expandShowRowSubtotal h, opts\r\n            rowSpan += 1 if not opts.displayOnTop and not opts.hideOnExpand\r\n            diffRowSpan = rowSpan - h.th.rowSpan + 1\r\n            h.th.rowSpan = rowSpan+1\r\n            p = h.parent\r\n            while p\r\n                p.th.rowSpan += diffRowSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col] \r\n            # when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            # buildValues tbody, colAttrHeaders, rowAttrHeaders\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colAttrHeaders if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}