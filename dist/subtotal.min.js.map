{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColHide","classColShow","classCollapsed","classExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseChildCol","collapseChildRow","collapseCol","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideDescendantCol","hideDescendantRow","main","processKeys","removeClass","replaceClass","setAttributes","setHeaderAttribs","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableFrom","disableSubtotal","disableAfter","collapseAt","collapseRowsAt","colSubtotalDisplay","collapseColsAt","getRowKeys","getColKeys","displayOnTop","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","console","warn","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","label","collapse","expand","hProps","class","h","chKey","counter","colSpan","rowSpan","hideOnExpand","sTh","style","display","tbody","firstChild","insertBefore","sTr","colAttrHeaders","rowAttrHeaders","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","setRowInitParams","format","setColInitParams","colClass","rowClass","rowDisableFrom","isRowHideOnExpand","isColDisable","colDisableAfter","isColHideOnExpand","data-value","data-rownode","data-colnode","isDisplayOnTop","data-row","data-rowcol","clsNames","data-for","result","d","closest","find","css","exclude","not","ch","p","cell","cells","getElementsByTagName","collapsible","ref2","colAxisHeaders","colKeyHeaders","rowAxisHeaders","rowKeyHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            console.warn tree\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            ah.th.onclick = (event) ->\r\n                event = event || window.event\r\n                ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild ah.th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        setHeaderAttribs = (col, label, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: arrowExpanded\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: \"#{classExpanded} \"\r\n            hProps.arrow = \"\" if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n            hProps.textContent = \"#{hProps.arrow} #{label}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    if opts.colSubtotalDisplay.hideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt\r\n                        h.sTh.style.display = \"none\"\r\n                        addClass h.sTh, classColHide\r\n                    h[h.children[0]].tr.appendChild h.sTh if h.children.length isnt 0\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n                tbody.appendChild h.tr if h.leaves is 0\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount if h.col < opts.rowSubtotalDisplay.collapseAt\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    ++ah.expandables\r\n                    addClass h.th, hProps.class\r\n                    h.th.textContent = \"#{hProps.arrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                h.sTh.style.display = \"none\" if (opts.rowSubtotalDisplay.hideOnExpand and h.col < opts.rowSubtotalDisplay.collapseAt) or h.col > opts.rowSubtotalDisplay.collapseAt\r\n                h.th.rowSpan++\r\n\r\n                addClass h.tr, hProps.class\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.sTr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders) ->\r\n            for rowHeader in attrHeaders\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in attrHeaders\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt))) or (colHeader.col > opts.colSubtotalDisplay.collapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt or colHeader.col > opts.colSubtotalDisplay.collapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders) ->\r\n            for h in attrHeaders when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > opts.colSubtotalDisplay.collapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h, opts) ->\r\n            exclude = \".#{classRowHide}\"\r\n            exclude += \", .#{classColHide}\" if not opts.hideOnExpand\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n                .not exclude\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            collapseShowColSubtotal h, opts\r\n            if hasClass h.th, classColShow\r\n                p = h.parent\r\n                while p\r\n                    p.th.colSpan -= colSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColShow}\" \r\n                .addClass \"#{classExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColHide}\"\r\n                .addClass \"#{classExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            if ch.leaves isnt 0 and (ch.col >= opts.disableFrom or (ch.clickStatus is clickStatusCollapsed and not opts.hideOnExpand) or (ch.clickStatus is clickStatusExpanded and opts.hideOnExpand))\r\n                replaceClass ch.th, classColHide, classColShow\r\n                ch.th.textContent = \" #{arrowExpanded} #{ch.text} \"\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n                if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                    replaceClass ch.sTh, classColShow, classColHide\r\n                    ch.sTh.style.display = \"none\"\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if ch.clickStatus is clickStatusExpanded\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if opts.hideOnExpand\r\n                expandHideColSubtotal h\r\n                --colSpan\r\n            else\r\n                expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideDescendantRow = (d, opts) ->\r\n            d.tr.style.display = \"none\" if opts.displayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classExpanded, classCollapsed\r\n            h.th.style.display = \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.rowSpan = 1\r\n            replaceClass h.sTh, classExpanded, classCollapsed\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.tr, classExpanded, classCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideDescendantRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            rowSpan = h.th.rowSpan - 1\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (h, opts) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classCollapsed, classExpanded\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classCollapsed, classExpanded\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            showChildRow ch, opts\r\n            expandChildRow ch[chKey], opts for chKey in ch.children when ch.clickStatus is clickStatusExpanded\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            rowSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n                rowSpan += ch.th.rowSpan\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                h.th.rowSpan = rowSpan+1\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = attrs.length-2\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            # buildValues tbody, colAttrHeaders, rowAttrHeaders\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colAttrHeaders if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}