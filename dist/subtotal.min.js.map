{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColCollapsed","classColExpanded","classColHide","classColShow","classCollapsed","classExpanded","classRowCollapsed","classRowExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseChildCol","collapseCol","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","colsCollapseAt","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideDescendantCol","hideDescendantRow","main","processKeys","removeClass","replaceClass","rowsCollapseAt","setAttributes","setHeaderAttribs","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableAfter","disableFrom","disableSubtotal","colSubtotalDisplay","collapseColsAt","collapseRowsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","console","warn","axisHeaders","ah","arrow","hClass","expandedCount","attrHeaders","clickStatus","onClick","collapseAt","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","label","collapse","expand","hProps","class","h","chKey","counter","colSpan","rowSpan","sTh","hideOnExpand","style","display","tbody","firstChild","displayOnTop","insertBefore","sTr","colAttrHeaders","rowAttrHeaders","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","setRowInitParams","format","setColInitParams","colClass","rowClass","rowDisableFrom","isRowHideOnExpand","isColDisable","colDisableAfter","isColHideOnExpand","data-value","data-rownode","data-colnode","isDisplayOnTop","data-row","data-rowcol","clsNames","data-for","result","d","closest","find","css","not","ch","p","ref2","getAttribute","cell","cells","getElementsByTagName","r","isRowDisableExpandCollapse","gch","nShown","nodes","colAxisHeaders","colKeyHeaders","rowAxisHeaders","rowKeyHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        opts.rowSubtotalDisplay.disableAfter = 9999 if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n        opts.rowSubtotalDisplay.disableFrom = if opts.rowSubtotalDisplay.disableSubtotal then 0 else opts.rowSubtotalDisplay.disableAfter + 1 if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n        opts.colSubtotalDisplay.disableAfter = 9999 if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n        opts.colSubtotalDisplay.disableFrom = if opts.colSubtotalDisplay.disableSubtotal then 0 else opts.colSubtotalDisplay.disableAfter + 1 if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        colsCollapseAt = 9999 if typeof opts.collapseColsAt is 'undefined'\r\n        rowsCollapseAt = 9999 if typeof opts.collapseRowsAt is 'undefined'\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            console.warn tree\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                expandedCount: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col > opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{attrs[col]}\" \r\n            ah.th.onclick = (event) ->\r\n                event = event || window.event\r\n                ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild ah.th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        setHeaderAttribs = (col, label, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: arrowExpanded\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: \"#{classExpanded} \"\r\n            if col > opts.collapseAt\r\n                hProps =\r\n                    arrow: arrowCollapsed\r\n                    clickStatus: clickStatusCollapsed\r\n                    onClick: expand\r\n                    class: \"#{classCollapsed} \"\r\n            hProps.arrow = \"\" if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n            hProps.textContent = \"#{hProps.arrow} #{label}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ++ah.expandedCount if h.col < opts.colSubtotalDisplay.collapseAt\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom and not opts.colSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller pvtColSubtotal\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    h.sTh.style.display = \"none\" if (opts.colSubtotalDisplay.hideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt) or h.col > opts.colSubtotalDisplay.collapseAt\r\n                    h[h.children[0]].tr.appendChild h.sTh if h.children.length isnt 0\r\n                    h.th.colSpan++\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ++ah.expandedCount if h.col < rowsCollapseAt\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"row#{h.row} rowcol#{h.col} #{classRowShow}\"\r\n            addClass h.th, \"pvtRowSubtotal\" if h.th.children.length isnt 0\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n\r\n            if (opts.rowSubtotalDisplay.displayOnTop and h.children.length is 1) or (not opts.rowSubtotalDisplay.displayOnTop and h.children.length isnt 0)\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"pvtRowSubtotal row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    addClass h.th, hProps.class\r\n                    h.th.textContent = \"#{hProps.arrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                if h.children.length > 1\r\n                    h.sTh = createElement \"th\", \"pvtRowLabelFiller pvtRowSubtotal row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-rownode\", h.node\r\n                    h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                    h.sTh.style.display = \"none\" if (opts.rowSubtotalDisplay.hideOnExpand and h.col < opts.rowSubtotalDisplay.collapseAt) or h.col > opts.rowSubtotalDisplay.collapseAt\r\n                    h.th.rowSpan++\r\n\r\n                    addClass h.tr, hProps.class\r\n                    if opts.rowSubtotalDisplay.displayOnTop\r\n                        h.tr.appendChild h.sTh\r\n                    else\r\n                        h.sTr = createElement \"tr\", \"pvtRowSubtotal row#{h.row} #{hProps.class}\"\r\n                        h.sTr.appendChild h.sTh\r\n                        tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n            else\r\n                tbody.appendChild h.tr if h.children.length is 0\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders) ->\r\n            for rowHeader in attrHeaders\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in attrHeaders\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (rowHeader.col > rowsCollapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt))) or (colHeader.col > colsCollapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt or colHeader.col > colsCollapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders) ->\r\n            for h in attrHeaders when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > colsCollapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < colsCollapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColExpanded} #{classColHide}\"\r\n                .addClass \"#{classColCollapsed} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" \" + arrowCollapsed + \" \" + h.text\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            for chKey in ch.children\r\n                collapseChildCol ch[chKey], h\r\n\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                collapseChildCol ch, h\r\n\r\n            collapseShowColSubtotal h\r\n\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.expandedCount--\r\n            if ah.expandedCount == 0\r\n                for i in [h.col..ah.length-2] when i < opts.disableFrom\r\n                    ah = axisHeaders.ah[i]\r\n                    replaceClass ah.th, classExpanded, classCollapsed\r\n                    ah.th.textContent = \" \" + arrowCollapsed + \" \" + ah.text\r\n                    ah.clickStatus = clickStatusCollapsed\r\n                    ah.onClick = expandAxis\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            h.th.style.display = \"\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.style.display = \"\"\r\n            ++h.th.colSpan\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            if ch.descendants != 0 and hasClass(ch.th, classColExpanded) and (ch.col > opts.disableFrom or opts.hideOnExpand)\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if ch.clickStatus isnt clickStatusCollapsed\r\n\r\n        expandCol = (axisHeaders, h, opts) ->\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n            if h.children.length isnt 0\r\n                replaceClass h.th, classColCollapsed, classColExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.text\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colspan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n\r\n            ah = axisHeaders.ah[h.col]\r\n            ++ah.expandedCount\r\n            if ah.expandedCount is ah.attrHeaders.length\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + ah.th.getAttribute \"data-colAttr\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideDescendantRow = (d) ->\r\n            d.tr.style.display = \"none\" if isDisplayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowCollapsed + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            replaceClass h.sTh, classRowExpanded, classRowCollapsed\r\n            replaceClass h.tr, classRowExpanded, classRowCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            h = attrHeaders[r]\r\n            return if not h or h.clickStatus is clickStatusCollapsed or h.col >= rowDisableFrom or isRowDisableExpandCollapse \r\n            rowSpan = h.th.rowSpan\r\n            isRowSubtotal = h.descendants != 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = attrHeaders[r-i]\r\n                hideDescendantRow d\r\n            h.th.style.display = \"none\" if not isDisplayOnTop\r\n            collapseShowRowSubtotal h if isRowSubtotal\r\n            if isDisplayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.expandedCount--\r\n\r\n            return if ah.expandedCount != 0\r\n\r\n            for j in [h.col..axisHeaders.ah.length-2] when j < rowDisableFrom\r\n                ah = axisHeaders.ah[j]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" \" + arrowCollapsed + \" \" + ah.th.getAttribute \"data-rowAttr\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n\r\n        showChildRow = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowExpanded + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classRowCollapsed, classRowExpanded\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classRowCollapsed, classRowExpanded\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch) ->\r\n            nShown = 0\r\n            if ch.descendants != 0\r\n                showChildRow ch\r\n                nShown++\r\n                nShown += expandChildRow gch for gch in ch.children when ch.clickStatus isnt clickStatusCollapsed\r\n            else\r\n                showChildRow ch\r\n                nShown++\r\n            return nShown\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            isRowSubtotal = h.descendants != 0\r\n            nShown = 0\r\n            for ch in h.children\r\n                nShown +=  expandChildRow ch, 0\r\n            if isRowSubtotal\r\n                if isRowHideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if isDisplayOnTop\r\n                h.th.rowSpan = nShown\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += nShown\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            ah = axisHeaders.ah[h.col]\r\n            ++ah.expandedCount\r\n            if ah.expandedCount == ah.attrHeaders.length\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + ah.th.getAttribute \"data-rowAttr\"\r\n                ah.clickStatus = clickStatusExpanded\r\n\r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            n = attrs.length-2\r\n            for i in [col..n]\r\n                ah = axisHeaders.ah[i]\r\n                axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in ah.attrHeaders when h.clickStatus isnt clickStatusCollapsed and h.th.style.display isnt \"none\" and h.leaves > 1\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[i]\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            for i in [0..col] \r\n                ah = axisHeaders.ah[i]\r\n                axisHeaders.expandAttrHeader axisHeaders, h, opts for h in ah.attrHeaders when h.leaves > 1\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + attrs[i]\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis \r\n\r\n\r\n            ++col\r\n            while i < attrs.length-1 and col < opts.disableFrom\r\n                ah = axisHeaders.ah[col]\r\n                if ah.expandedCount == 0\r\n                    replaceClass ah.th, classExpanded, classCollapsed\r\n                    ah.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[col]\r\n                    ah.clickStatus = clickStatusCollapsed\r\n                    ah.onClick = expandAxis \r\n                else if ah.expandedCount == ah.nodes.length\r\n                    replaceClass ah.th, classCollapsed, classExpanded\r\n                    ah.th.textContent = \" \" + arrowExpanded + \" \" + attrs[col]\r\n                    ah.clickStatus = clickStatusExpanded\r\n                    ah.onClick = collapseAxis \r\n                ++col\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            # buildValues tbody, colAttrHeaders, rowAttrHeaders\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colAttrHeaders if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    #\r\n    # \r\n    # Aggregators\r\n    # \r\n    #\r\n\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}