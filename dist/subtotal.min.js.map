{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildColHeader","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeader","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowTotalsHeader","buildValues","classColCollapsed","classColExpanded","classColHide","classColShow","classCollapsed","classExpanded","classRowCollapsed","classRowExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","colDisableAfter","colDisableFrom","collapseAt","collapseChildCol","collapseCol","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","colsCollapseAt","createElement","defaults","expandAt","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideDescendantCol","hideDescendantRow","isColDisable","isColDisableExpandCollapse","isColHideOnExpand","isDisplayOnRight","isDisplayOnTop","isRowDisable","isRowDisableExpandCollapse","isRowHideOnExpand","main","processKeys","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","removeClass","replaceClass","rowDisableAfter","rowDisableFrom","rowsCollapseAt","setAttributes","setColInitParams","setRowInitParams","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableSubtotal","disableAfter","hideOnExpand","disableExpandCollapse","displayOnTop","colSubtotalDisplay","displayOnRight","collapseColsAt","collapseRowsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","ref10","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","init","colArrow","colClass","colClickStatus","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nodes","c","colspan","rowspan","colHeaderCols","onclick","window","toggleColHeaderHeader","target","getAttribute","h","chKey","firstChild","hh","ref11","counter","colSpan","rowSpan","toggleCol","parseInt","sTh","style","display","rowArrow","rowClass","rowClickStatus","rowHeaderHeaders","rowAttr","headers","rowHeaderRows","toggleRowHeaderHeader","tbody","insertBefore","toggleRow","sTr","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","format","data-value","data-rownode","data-colnode","data-row","data-rowcol","clsNames","data-for","result","d","closest","find","css","not","ch","colHeaderHeader","p","ref12","console","warn","cell","cells","getElementsByTagName","r","gch","nShown","headerHeaders","collapse","idx","indexOf","disableFrom","headerNodes","expand","colHeaders","rowHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        isRowDisable = opts.rowSubtotalDisplay?.disableSubtotal\r\n        rowDisableAfter = if typeof opts.rowSubtotalDisplay?.disableAfter isnt 'undefined' then opts.rowSubtotalDisplay.disableAfter else 9999\r\n        if typeof opts.rowSubtotalDisplay?disableFrom is 'undefined'\r\n            rowDisableFrom = if isRowDisable then 0 else rowDisableAfter + 1\r\n        else\r\n            rowDisableFrom = opts.rowSubtotalDisplay.disableFrom\r\n        isRowHideOnExpand = opts.rowSubtotalDisplay?.hideOnExpand\r\n        isRowDisableExpandCollapse = opts.rowSubtotalDisplay?.disableExpandCollapse\r\n        isDisplayOnTop = if typeof opts.rowSubtotalDisplay?.displayOnTop isnt 'undefined' then opts.rowSubtotalDisplay.displayOnTop else true\r\n        isColDisable = opts.colSubtotalDisplay?.disableSubtotal\r\n        isColHideOnExpand = opts.colSubtotalDisplay?.hideOnExpand\r\n        isColDisableExpandCollapse = opts.colSubtotalDisplay?.disableExpandCollapse\r\n        colDisableAfter = if typeof opts.colSubtotalDisplay?.disableAfter isnt 'undefined' then opts.colSubtotalDisplay.disableAfter else 9999\r\n        if typeof opts.colSubtotalDisplay?disableFrom is 'undefined'\r\n            colDisableFrom = if isColDisable then 0 else colDisableAfter + 1\r\n        else\r\n            colDisableFrom = opts.colSubtotalDisplay.disableFrom\r\n        isDisplayOnRight = if typeof opts.colSubtotalDisplay?.displayOnRight isnt 'undefined' then opts.rowSubtotalDisplay.displayOnRight else true\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        colsCollapseAt = if typeof opts.collapseColsAt isnt 'undefined' then opts.collapseColsAt else 9999\r\n        rowsCollapseAt = if typeof opts.collapseRowsAt isnt 'undefined' then opts.collapseRowsAt else 9999\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        isDisplayOnTop = false;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            for own a, v of attrs\r\n                e.setAttribute a, v \r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            return tree\r\n\r\n        setColInitParams = (col) ->\r\n            init = \r\n                colArrow: arrowExpanded\r\n                colClass: classColExpanded\r\n                colClickStatus: clickStatusExpanded\r\n            if col >= colsCollapseAt\r\n                init =\r\n                    colArrow: arrowCollapsed\r\n                    colClass: classColCollapsed\r\n                    colClickStatus: clickStatusCollapsed\r\n            if col >= colDisableFrom\r\n                init =\r\n                    colArrow: \"\"\r\n            return init\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            init = setColInitParams col\r\n            if col < colAttrs.length-1\r\n                className += \" \" + init.colClass\r\n                textContent = \" \" + init.colArrow + \" \" + colAttr if not (isColDisableExpandCollapse or isColDisable or col > colDisableAfter)\r\n            th = createElement \"th\", className, textContent\r\n            th.setAttribute \"data-colAttr\", colAttr\r\n            tr.appendChild th\r\n            colHeaderHeaders.push\r\n                tr: tr,\r\n                th: th,\r\n                clickStatus: init.colClickStatus,\r\n                expandedCount: 0,\r\n                nodes: [],\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createElement \"th\", null, null, {\r\n                    colspan: rowAttrs.length,\r\n                    rowspan: colAttrs.length}\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            n = colAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute \"data-colAttr\"\r\n\r\n        buildColHeader = (colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs, node) ->\r\n            # DF Recurse\r\n            for chKey in h.children\r\n                buildColHeader colHeaderHeaders, colHeaderCols, h[chKey], rowAttrs, colAttrs, node\r\n            # Process\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount if h.col < colsCollapseAt\r\n            hh.nodes.push h\r\n\r\n            h.node = node.counter\r\n            init = setColInitParams h.col\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{init.colClass}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            if h.children.length is 0 and rowAttrs.length isnt 0\r\n                h.th.rowSpan = 2\r\n            if h.leaves > 1 and not (isColDisable or h.col >= colDisableFrom)\r\n                if not isColDisableExpandCollapse # and h.parent?.children.length isnt 1\r\n                    h.th.textContent = \"#{init.colArrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        toggleCol colHeaderHeaders, colHeaderCols, parseInt event.target.getAttribute \"data-colnode\"\r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller pvtColSubtotal\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    h.sTh.style.display = \"none\" if (isColHideOnExpand and h.col < colsCollapseAt) or h.col > colsCollapseAt\r\n                    firstChild.tr.appendChild h.sTh\r\n                    h.th.colSpan++\r\n            # h.sTh = firstChild.sTh if h.children.length is 1\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = init.colClickStatus\r\n            hh.tr.appendChild h.th\r\n            h.tr = hh.tr\r\n            colHeaderCols.push h\r\n            node.counter++\r\n\r\n        setRowInitParams = (col) ->\r\n            init = \r\n                rowArrow: arrowExpanded\r\n                rowClass: classRowExpanded\r\n                rowClickStatus: clickStatusExpanded\r\n            if col >= rowsCollapseAt\r\n                init =\r\n                    rowArrow: arrowCollapsed\r\n                    rowClass: classRowCollapsed\r\n                    rowClickStatus: clickStatusCollapsed\r\n            if col >= rowDisableFrom\r\n                init = rowArrow: \"\"\r\n            return init\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr if not (isRowDisableExpandCollapse or i >= rowDisableFrom or i >= rowsCollapseAt)\r\n                th = createElement \"th\", className, textContent\r\n                th.setAttribute \"data-rowAttr\", rowAttr\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push \r\n                    th: th\r\n                    clickStatus: if i < rowsCollapseAt then clickStatusExpanded else clickStatusCollapsed\r\n                    expandedCount: 0\r\n                    headers: []\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            n = rowAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute \"data-rowAttr\"\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals, {rowspan: rowspan}\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs, node) ->\r\n            # DF Recurse\r\n            for chKey in h.children\r\n                buildRowHeader tbody, rowHeaderHeaders, rowHeaderRows, h[chKey], rowAttrs, colAttrs, node\r\n\r\n            # Process\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount if h.col < rowsCollapseAt\r\n            hh.headers.push h\r\n\r\n            h.node = node.counter\r\n            init = setRowInitParams h.col\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"row#{h.row} rowcol#{h.col} #{classRowShow}\"\r\n            addClass h.th, \"pvtRowSubtotal\" if h.th.children.length isnt 0\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n\r\n            if (isDisplayOnTop and h.children.length is 1) or (not isDisplayOnTop and h.children.length isnt 0)\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"pvtRowSubtotal row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n\r\n            if h.leaves > 1 and not (isRowDisable or h.col >= rowDisableFrom)\r\n                if not isRowDisableExpandCollapse\r\n                    addClass h.th, init.rowClass\r\n                    h.th.textContent = \"#{init.rowArrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        toggleRow rowHeaderHeaders, rowHeaderRows, parseInt event.target.getAttribute \"data-rownode\"\r\n\r\n                if h.children.length > 1\r\n                    h.sTh = createElement \"th\", \"pvtRowLabelFiller pvtRowSubtotal row#{h.row} rowcol#{h.col} #{init.rowClass}\"\r\n                    h.sTh.setAttribute \"data-rownode\", h.node\r\n                    h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                    h.sTh.style.display = \"none\" if (isRowHideOnExpand and h.col < rowsCollapseAt) or h.col > rowsCollapseAt\r\n                    h.th.rowSpan++\r\n\r\n                    addClass h.tr, init.rowClass\r\n                    if isDisplayOnTop\r\n                        h.tr.appendChild h.sTh\r\n                    else\r\n                        h.sTr = createElement \"tr\", \"pvtRowSubtotal row#{h.row} #{init.rowClass}\"\r\n                        h.sTr.appendChild h.sTh\r\n                        tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n            else\r\n                tbody.appendChild h.tr if h.children.length is 0\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = init.rowClickStatus\r\n            rowHeaderRows.push h\r\n            node.counter++\r\n\r\n\r\n        buildValues = (tbody, rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (rowHeader.col > rowsCollapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt))) or (colHeader.col > colsCollapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt or colHeader.col > colsCollapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > colsCollapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < colsCollapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColExpanded} #{classColHide}\"\r\n                .addClass \"#{classColCollapsed} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" \" + arrowCollapsed + \" \" + h.text\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            for chKey in ch.children\r\n                collapseChildCol ch[chKey], h\r\n\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c, opts) ->\r\n            return if isColDisable or isColDisableExpandCollapse or not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.col >= colDisableFrom or h.clickStatus is clickStatusCollapsed\r\n\r\n            colSpan = h.th.colSpan - 1\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                collapseChildCol ch, h\r\n\r\n            collapseShowColSubtotal h\r\n\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2] when i <= colDisableAfter\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute \"data-colAttr\"\r\n                    colHeaderHeader.clickStatus = clickStatusCollapsed\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            h.th.style.display = \"\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.style.display = \"\"\r\n            ++h.th.colSpan\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch) ->\r\n            if ch.descendants != 0 and hasClass(ch.th, classColExpanded) and (isColDisable or ch.col > colDisableAfter or isColHideOnExpand)\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n            expandChildCol ch[chKey] for chKey in ch.children if ch.clickStatus isnt clickStatusCollapsed\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c, opts) ->\r\n            return if isColDisable or isColDisableExpandCollapse or not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.col >= colDisableFrom or h.clickStatus is clickStatusExpanded\r\n\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n            if h.children.length isnt 0\r\n                replaceClass h.th, classColCollapsed, classColExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.text\r\n                if isColHideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colspan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount is hh.headers.length\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-colAttr\"\r\n                hh.clickStatus = clickStatusExpanded\r\n            console.warn \"#{h.text}: #{colHeaderCols[38].th.colSpan}\"\r\n\r\n        hideDescendantRow = (d) ->\r\n            d.tr.style.display = \"none\" if isDisplayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowCollapsed + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            replaceClass h.sTh, classRowExpanded, classRowCollapsed\r\n            replaceClass h.tr, classRowExpanded, classRowCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusCollapsed or h.col >= rowDisableFrom or isRowDisableExpandCollapse \r\n\r\n            rowSpan = h.th.rowSpan\r\n            isRowSubtotal = h.descendants != 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r-i]\r\n                hideDescendantRow d\r\n            h.th.style.display = \"none\" if not isDisplayOnTop\r\n            collapseShowRowSubtotal h if isRowSubtotal\r\n            if isDisplayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            hh.expandedCount--\r\n\r\n            return if hh.expandedCount != 0\r\n\r\n            for j in [h.col..rowHeaderHeaders.hh.length-2] when j < rowDisableFrom\r\n                hh = rowHeaderHeaders.hh[j]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = clickStatusCollapsed\r\n\r\n        showChildRow = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowExpanded + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classRowCollapsed, classRowExpanded\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classRowCollapsed, classRowExpanded\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch) ->\r\n            nShown = 0\r\n            if ch.descendants != 0\r\n                showChildRow ch\r\n                nShown++\r\n                nShown += expandChildRow gch for gch in ch.children when ch.clickStatus isnt clickStatusCollapsed\r\n            else\r\n                showChildRow ch\r\n                nShown++\r\n            return nShown\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusExpanded or isRowDisableExpandCollapse or h.col >= rowDisableFrom\r\n\r\n            isRowSubtotal = h.descendants != 0\r\n            nShown = 0\r\n            for ch in h.children\r\n                nShown +=  expandChildRow ch, 0\r\n            if isRowSubtotal\r\n                if isRowHideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if isDisplayOnTop\r\n                h.th.rowSpan = nShown\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += nShown\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.headers.length\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = clickStatusExpanded\r\n\r\n        collapseAt = (headerHeaders, headers, attrs, attr, collapse, opts) ->\r\n            return if opts.disableSubtotal or opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            n = attrs.length-2\r\n            return if idx < 0 or n < idx\r\n\r\n            for i in [idx..n] when i <= opts.disableFrom\r\n                hh = headerHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[i]\r\n                hh.clickStatus = clickStatusCollapsed\r\n\r\n                collapse headerHeaders, headers, h.node, opts for h in hh.headers when h.clickStatus isnt clickStatusCollapsed and h.th.style.display isnt \"none\" and h.leaves > 1\r\n\r\n        expandAt = (headerHeaders, headerNodes, attrs, attr, expand, opts) ->\r\n            return if opts.disableSubtotal or opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            return if idx < 0 or idx == attrs.length-1\r\n\r\n            for i in [0..idx] when i < opts.disableFrom\r\n                hh = headerHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + attrs[i]\r\n                hh.clickStatus = clickStatusExpanded\r\n\r\n                expand headerHeaders, headerNodes, h.node for h in hh.headers when h.leaves > 1\r\n\r\n            ++idx\r\n            while idx < attrs.length-1 and idx < opts.disableFrom\r\n                hh = headerHeaders[idx]\r\n                if hh.expandedCount == 0\r\n                    replaceClass hh.th, classExpanded, classCollapsed\r\n                    hh.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[idx]\r\n                    hh.clickStatus = clickStatusCollapsed\r\n                else if hh.expandedCount == hh.nodes.length\r\n                    replaceClass hh.th, classCollapsed, classExpanded\r\n                    hh.th.textContent = \" \" + arrowExpanded + \" \" + attrs[idx]\r\n                    hh.clickStatus = clickStatusExpanded\r\n                ++idx\r\n\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            rowHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length > 0 and rowKeys.length > 0\r\n            colHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length > 0 and colKeys.length > 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length > 0\r\n                buildColHeaderHeaders thead, colHeaderHeaders, rowAttrs, colAttrs\r\n                node = counter: 0\r\n                buildColHeader colHeaderHeaders, colHeaderCols, colHeaders[chKey], rowAttrs, colAttrs, node for chKey in colHeaders.children\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n\r\n            if rowAttrs.length > 0\r\n                buildRowHeaderHeaders thead, rowHeaderHeaders, rowAttrs, colAttrs\r\n                buildRowTotalsHeader rowHeaderHeaders.tr, rowAttrs, colAttrs if colAttrs.length == 0\r\n\r\n            if colAttrs.length > 0\r\n                buildRowTotalsHeader colHeaderHeaders[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            node = counter: 0\r\n            buildRowHeader tbody, rowHeaderHeaders, rowHeaderRows, rowHeaders[chKey], rowAttrs, colAttrs, node for chKey in rowHeaders.children if rowAttrs.length > 0\r\n            buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            # buildValues tbody, rowHeaderRows, colHeaderCols\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colHeaderCols if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    #\r\n    # \r\n    # Aggregators\r\n    # \r\n    #\r\n\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}