{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColHide","classColShow","classCollapsed","classExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideChildCol","hideDescendantRow","main","processKeys","removeClass","replaceClass","setAttributes","setHeaderAttribs","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableFrom","disableSubtotal","disableAfter","collapseAt","collapseRowsAt","colSubtotalDisplay","collapseColsAt","getRowKeys","getColKeys","displayOnTop","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","console","warn","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","collapse","expand","hProps","class","chKey","counter","colSpan","rowSpan","hideOnExpand","sTh","style","display","tbody","firstChild","insertBefore","sTr","colAttrHeaders","rowAttrHeaders","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","setRowInitParams","format","setColInitParams","colClass","rowClass","rowDisableFrom","isRowHideOnExpand","isColDisable","colDisableAfter","isColHideOnExpand","data-value","data-rownode","data-colnode","isDisplayOnTop","data-row","data-rowcol","clsNames","data-for","result","collapsible","Math","min","ch","closest","find","css","exclude","not","p","d","cell","cells","getElementsByTagName","ref2","colAxisHeaders","colKeyHeaders","rowAxisHeaders","rowKeyHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            console.warn tree\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\r\n                ah.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild ah.th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        setHeaderAttribs = (h, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: \" #{arrowExpanded} \"\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: classExpanded\r\n            hProps.arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.leaves is 1\r\n            hProps.textContent = \"#{hProps.arrow}#{h.text}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\r\n                        h.th.onclick = (event) ->\r\n                            event = event || window.event\r\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    if opts.colSubtotalDisplay.hideOnExpand\r\n                        h.sTh.style.display = \"none\"\r\n                        addClass h.sTh, classColHide\r\n                    h[h.children[0]].tr.appendChild h.sTh\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                h.tr.appendChild h.th\r\n                if h.leaves is 0\r\n                    tbody.appendChild h.tr\r\n                else\r\n                    tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount\r\n                ++ah.expandables\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                h.sTh.style.display = \"none\" if opts.rowSubtotalDisplay.hideOnExpand\r\n\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.sTr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n\r\n            h.th.rowSpan++ if h.leaves > 1\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders) ->\r\n            for rowHeader in attrHeaders\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in attrHeaders\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt))) or (colHeader.col > opts.colSubtotalDisplay.collapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt or colHeader.col > opts.colSubtotalDisplay.collapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < opts.colSubtotalDisplay.collapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > opts.rowSubtotalDisplay.collapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < opts.rowSubtotalDisplay.collapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders) ->\r\n            for h in attrHeaders when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > opts.colSubtotalDisplay.collapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\r\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            for i in [col..collapsible]\r\n                ah = axisHeaders.ah[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                collapseAxisHeaders axisHeaders, col, opts\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseHiddenColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n            \r\n        collapseShowColSubtotal = (h, opts) ->\r\n            exclude = \".#{classRowHide}\"\r\n            exclude += \", .#{classColHide}\" if not opts.hideOnExpand\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n                .not exclude\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideChildCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            if h.col < opts.disableFrom\r\n                if hasClass h.th, classColHide\r\n                    collapseHiddenColSubtotal h, opts\r\n                else \r\n                    collapseShowColSubtotal h, opts\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColShow}\" \r\n                .addClass \"#{classExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColHide}\"\r\n                .addClass \"#{classExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            showChildCol ch\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classColShow, classColHide\r\n                ch.sTh.style.display = \"none\"\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if h.col < opts.disableFrom\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colSpan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideDescendantRow = (d, opts) ->\r\n            d.tr.style.display = \"none\" if opts.displayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classExpanded, classCollapsed\r\n            h.th.style.display = \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.rowSpan = 1\r\n            replaceClass h.sTh, classExpanded, classCollapsed\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.tr, classExpanded, classCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideDescendantRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            rowSpan = h.th.rowSpan - 1\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (h, opts) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not opts.displayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            replaceClass h.th, classCollapsed, classExpanded\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classCollapsed, classExpanded\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            showChildRow ch, opts\r\n            expandChildRow ch[chKey], opts for chKey in ch.children when ch.clickStatus is clickStatusExpanded\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            rowSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n                rowSpan += ch.th.rowSpan\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if opts.displayOnTop\r\n                h.th.rowSpan = rowSpan+1\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col] \r\n            # when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            # buildValues tbody, colAttrHeaders, rowAttrHeaders\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colAttrHeaders if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}