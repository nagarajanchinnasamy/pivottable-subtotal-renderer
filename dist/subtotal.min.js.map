{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColHide","classColShow","classCollapsed","classExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getHeaderAttribs","getTableEventHandlers","hasClass","hideChildCol","hideChildRow","main","processKeys","removeClass","replaceClass","setAttributes","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","displayOnTop","disableFrom","disableSubtotal","disableAfter","collapseAt","collapseRowsAt","colSubtotalDisplay","collapseColsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","elementType","textContent","attributes","eventHandlers","e","event","handler","val","document","setAttribute","addEventListener","a","v","keysArr","headers","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","collapse","hProps","class","chKey","counter","colSpan","rowSpan","hideOnExpand","sTh","style","display","tbody","firstChild","insertBefore","sTr","value","filters","colAttrHeaders","rowAttrHeaders","ch","cls","len1","rCls","rh","td","totalAggregator","format","data-value","data-rownode","data-colnode","data-row","data-rowcol","clsNames","data-for","collapsible","Math","min","closest","find","css","exclude","not","p","console","warn","cell","cells","getElementsByTagName","diffRowSpan","ref2","colAxisHeaders","colKeyHeaders","result","rowAxisHeaders","rowKeyHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.displayOnTop is 'undefined'\r\n            opts.rowSubtotalDisplay.displayOnTop = true\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        # opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            headers = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = headers\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return headers\r\n                            return acc[curVal]\r\n                        headers)\r\n                    row++\r\n                    return headers\r\n                headers)\r\n            return headers\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\r\n                ah.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        getHeaderAttribs = (h, collapse, attrs, opts) ->\r\n            hProps =\r\n                arrow: \" #{arrowExpanded} \"\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: classExpanded\r\n            hProps.arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.leaves is 1\r\n            hProps.textContent = \"#{hProps.arrow}#{h.text}\"\r\n            return hProps\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = getHeaderAttribs h, collapseCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\r\n                        h.th.onclick = (event) ->\r\n                            event = event || window.event\r\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    if opts.colSubtotalDisplay.hideOnExpand\r\n                        h.sTh.style.display = \"none\"\r\n                        addClass h.sTh, classColHide\r\n                    h[h.children[0]].tr.appendChild h.sTh\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            hProps = getHeaderAttribs h, collapseRow, rowAttrs, opts.rowSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                h.tr.appendChild h.th\r\n                if h.leaves is 0\r\n                    tbody.appendChild h.tr\r\n                else\r\n                    tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount\r\n                ++ah.expandables\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                h.sTh.style.display = \"none\" if opts.rowSubtotalDisplay.hideOnExpand\r\n\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.th.rowSpan += 1 if not opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr = createElement \"tr\", \"row#{h.row} #{hProps.class}\"\r\n                    h.sTr.style.display = \"none\" if opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n\r\n            h.th.rowSpan++ if h.leaves > 1\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        getTableEventHandlers = (value, rowKey, colKey, rowAttrs, colAttrs, opts) ->\r\n            return if not opts.table?.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colKey[i] for own i, attr of colAttrs when colKey[i]?\r\n                filters[attr] = rowKey[i] for own i, attr of rowAttrs when rowKey[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for rh in rowAttrHeaders when rh.col is rowAttrs.length-1 or (rh.leaves isnt 1 and rh.col < opts.rowSubtotalDisplay.disableFrom)\r\n                rCls = \"pvtVal row#{rh.row} rowcol#{rh.col} #{classExpanded} #{classRowShow}\"\r\n                if rh.leaves > 0\r\n                    rCls += \" pvtRowSubtotal\"\r\n                    rCls += if opts.rowSubtotalDisplay.hideOnExpand then \" #{classRowHide}\" else \"  #{classRowShow}\"\r\n                else\r\n                    rCls += \" #{classColShow}\"\r\n                tr = if rh.sTr then rh.sTr else rh.tr\r\n                for ch in colAttrHeaders when ch.leaves isnt 1 and ch.col < opts.colSubtotalDisplay.disableFrom\r\n                    aggregator = tree[rh.flatKey][ch.flatKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    cls = \" #{rCls} col#{ch.row} colcol#{ch.col}\"\r\n                    if ch.leaves > 0\r\n                        cls += \" pvtColSubtotal #{classExpanded}\"\r\n                        cls += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    else\r\n                        cls += \" #{classColShow}\"\r\n                    td = createElement \"td\", cls, aggregator.format(val),\r\n                        \"data-value\": val\r\n                        \"data-rownode\": rh.node\r\n                        \"data-colnode\": ch.node,\r\n                        getTableEventHandlers val, rh.key, ch.key, rowAttrs, colAttrs, opts\r\n                    td.style.display = \"none\" if (rh.leaves > 0 and opts.rowSubtotalDisplay.hideOnExpand) or (ch.leaves > 0 and opts.colSubtotalDisplay.hideOnExpand)\r\n\r\n                    tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[rh.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", \"pvtTotal rowTotal #{rCls}\", totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-row\": \"row#{rh.row}\"\r\n                    \"data-rowcol\": \"col#{rh.col}\"\r\n                    \"data-rownode\": rh.node,\r\n                getTableEventHandlers val, rh.key, [], rowAttrs, colAttrs, opts\r\n                td.style.display = \"none\" if rh.leaves > 0 and opts.rowSubtotalDisplay.hideOnExpand\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for h in attrHeaders when h.leaves isnt 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                clsNames = \"pvtVal pvtTotal colTotal #{classExpanded} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.leaves isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\",\r\n                    getTableEventHandlers val, [], h.key, rowAttrs, colAttrs, opts\r\n                td.style.display = \"none\" if h.leaves > 0 and opts.colSubtotalDisplay.hideOnExpand\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (tbody, tr, rowAttrs, colAttrs, opts) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], [], rowAttrs, colAttrs, opts\r\n            tr.appendChild td\r\n            tbody.appendChild tr\r\n\r\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\r\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            for i in [col..collapsible]\r\n                ah = axisHeaders.ah[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                collapseAxisHeaders axisHeaders, col, opts\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseHiddenColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n            \r\n        collapseShowColSubtotal = (h, opts) ->\r\n            exclude = \".#{classRowHide}\"\r\n            exclude += \", .#{classColHide}\" if not opts.hideOnExpand\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classExpanded\r\n                .addClass classCollapsed\r\n                .not exclude\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideChildCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            console.warn \"col: #{h.col} disableFrom: #{opts.disableFrom}\"\r\n            if h.col < opts.disableFrom\r\n                if hasClass h.th, classColHide\r\n                    console.warn \"am here\"\r\n                    collapseHiddenColSubtotal h, opts\r\n                else \r\n                    collapseShowColSubtotal h, opts\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColShow}\" \r\n                .addClass \"#{classExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classCollapsed} #{classColHide}\"\r\n                .addClass \"#{classExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            showChildCol ch\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classColShow, classColHide\r\n                ch.sTh.style.display = \"none\"\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if h.col < opts.disableFrom\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colSpan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideChildRow = (ch, opts) ->\r\n            ch.tr.style.display = \"none\"\r\n            ch.sTr.style.display = \"none\" if ch.sTr\r\n            ch.th.style.display = \"none\"\r\n            ch.sTh.style.display = \"none\" if ch.sTh\r\n            tr = if ch.sTr then ch.sTr else ch.tr\r\n            cells = tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n\r\n        collapseShowRowSubtotal = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            h.sTr.style.display = \"\" if h.sTr\r\n            h.th.style.display = \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            h.th.rowSpan = if opts.displayOnTop then 1 else 2\r\n            replaceClass h.th, classExpanded, classCollapsed\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n                replaceClass h.sTh, classExpanded, classCollapsed\r\n            tr = if h.sTr then h.sTr else h.tr\r\n            cells = tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideChildRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            rowSpan = h.th.rowSpan\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h, opts\r\n            diffRowSpan = rowSpan - h.th.rowSpan \r\n            p = h.parent\r\n            while p\r\n                p.th.rowSpan -= diffRowSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            h.th.style.display = \"\"\r\n            return if h.leaves > 1 and ((h.clickStatus is clickStatusExpanded and opts.hideOnExpand) or h.col >= opts.disableFrom)\r\n            tr = h.tr\r\n            if h.sTr\r\n                h.sTr.style.display = \"\"\r\n                tr = h.sTr\r\n            h.sTh?.style.display = \"\"\r\n            cells = tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        expandShowRowSubtotal = (h, opts) ->\r\n            h.tr.style.display = \"\"\r\n            replaceClass h.tr, classCollapsed, classExpanded\r\n            h.sTr.style.display = \"\" if h.sTr\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classCollapsed, classExpanded\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            h.sTh.style.display = \"\" if h.sTh\r\n            replaceClass h.sTh, classCollapsed, classExpanded\r\n            tr = if h.sTr then h.sTr else h.tr\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n\r\n        expandHideRowSubtotal = (h, opts) ->\r\n            tr = h.tr\r\n            tr.style.display = \"\"\r\n            replaceClass tr, classCollapsed, classExpanded\r\n            h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            if h.sTr\r\n                h.sTr.style.display = \"none\"\r\n                tr = h.sTr\r\n            h.sTh.style.display = \"none\" if h.sTh\r\n            cells = tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classExpanded} #{classRowHide}\"\r\n                cell.style.display = \"none\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            expandChildRow ch[chKey], opts for chKey in ch.children if ch.clickStatus is clickStatusExpanded\r\n            showChildRow ch, opts\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            rowSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n                rowSpan += ch.th.rowSpan\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h, opts\r\n                else\r\n                    expandShowRowSubtotal h, opts\r\n            rowSpan += 1 if not opts.displayOnTop and not opts.hideOnExpand\r\n            diffRowSpan = rowSpan - h.th.rowSpan + 1\r\n            h.th.rowSpan = rowSpan+1\r\n            p = h.parent\r\n            while p\r\n                p.th.rowSpan += diffRowSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col] \r\n            # when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            buildValues tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colAttrHeaders, rowAttrs, colAttrs, opts if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr, rowAttrs, colAttrs, opts\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}