{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColCollapsed","classColExpanded","classColHide","classColHideOnExpand","classColShow","classCollapsed","classExpanded","classRowCollapsed","classRowExpanded","classRowHide","classRowHideOnExpand","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getHeaderText","getTableEventHandlers","hasClass","hideChildCol","hideChildRow","main","processKeys","removeClass","replaceClass","setAttributes","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","displayOnTop","disableFrom","disableSubtotal","disableAfter","collapseAt","collapseRowsAt","colSubtotalDisplay","collapseColsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","elementType","textContent","attributes","eventHandlers","e","event","handler","val","document","setAttribute","addEventListener","a","v","keysArr","headers","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","disableExpandCollapse","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","chKey","counter","colSpan","rowSpan","hideOnExpand","sTh","tbody","firstChild","insertBefore","sTr","value","filters","colAttrHeaders","rowAttrHeaders","ch","cls","len1","rCls","rh","td","totalAggregator","format","data-value","data-rownode","data-colnode","data-row","data-rowcol","clsNames","data-for","collapsible","Math","min","closest","find","p","cell","querySelectorAll","ref2","colAxisHeaders","colKeyHeaders","result","rowAxisHeaders","rowKeyHeaders","style","display","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        if typeof opts.rowSubtotalDisplay.displayOnTop is 'undefined'\r\n            opts.rowSubtotalDisplay.displayOnTop = true\r\n        if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.rowSubtotalDisplay.disableSubtotal\r\n                if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.rowSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.rowSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.rowSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseRowsAt is 'undefined'\r\n                opts.rowSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt\r\n\r\n        opts.colSubtotalDisplay = {} if not opts.colSubtotalDisplay\r\n        if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n            if not opts.colSubtotalDisplay.disableSubtotal\r\n                if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n                    opts.colSubtotalDisplay.disableFrom = 9999\r\n                else\r\n                    opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1\r\n            else\r\n                opts.colSubtotalDisplay.disableFrom = 0\r\n        if typeof opts.colSubtotalDisplay.collapseAt is 'undefined'\r\n            if typeof opts.collapseColsAt is 'undefined'\r\n                opts.colSubtotalDisplay.collapseAt = 9999\r\n            else\r\n                opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHideOnExpand = \"rowhideonexpand\"\r\n        classColHideOnExpand = \"colhideonexpand\"        \r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n\r\n\r\n        # opts.rowSubtotalDisplay.displayOnTop = true;\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            headers = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = headers\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return headers\r\n                            return acc[curVal]\r\n                        headers)\r\n                    row++\r\n                    return headers\r\n                headers)\r\n            return headers\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\r\n                ah.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        getHeaderText = (h, attrs, opts) ->\r\n            arrow = \" #{arrowExpanded} \"\r\n            arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.leaves is 1\r\n            return \"#{arrow}#{h.text}\"\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            h.onClick = collapseCol\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = getHeaderText h, colAttrs, opts.colSubtotalDisplay\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\r\n                        h.th.onclick = (event) ->\r\n                            event = event || window.event\r\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller #{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    replaceClass h.sTh, classColShow, classColHide if opts.colSubtotalDisplay.hideOnExpand\r\n                    h[h.children[0]].tr.appendChild h.sTh\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = clickStatusExpanded\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            h.onClick = collapseRow\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{classRowExpanded}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = getHeaderText h, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            if h.leaves is 1\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n                if h.leaves is 0\r\n                    tbody.appendChild h.tr\r\n                else\r\n                    tbody.insertBefore h.tr, firstChild.tr\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount\r\n                ++ah.expandables\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{classRowExpanded} #{classRowShow}\"\r\n                replaceClass h.sTh, classRowShow, classRowHide if opts.rowSubtotalDisplay.hideOnExpand\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.th.rowSpan += 1 # if not opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr = createElement \"tr\", \"row#{h.row}\"\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n\r\n            h.th.rowSpan++ if h.leaves > 1\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = clickStatusExpanded\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        getTableEventHandlers = (value, rowKey, colKey, rowAttrs, colAttrs, opts) ->\r\n            return if not opts.table?.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colKey[i] for own i, attr of colAttrs when colKey[i]?\r\n                filters[attr] = rowKey[i] for own i, attr of rowAttrs when rowKey[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for rh in rowAttrHeaders when rh.col is rowAttrs.length-1 or (rh.leaves isnt 1 and rh.col < opts.rowSubtotalDisplay.disableFrom)\r\n                rCls = \"pvtVal row#{rh.row} rowcol#{rh.col} #{classRowExpanded}\"\r\n                if rh.leaves > 0\r\n                    rCls += \" pvtRowSubtotal\"\r\n                    rCls += if opts.rowSubtotalDisplay.hideOnExpand then \" #{classRowHide}\" else \"  #{classRowShow}\"\r\n                else\r\n                    rCls += \" #{classRowShow}\"\r\n                tr = if rh.sTr then rh.sTr else rh.tr\r\n                for ch in colAttrHeaders when ch.col is colAttrs.length-1 or (ch.leaves isnt 1 and ch.col < opts.colSubtotalDisplay.disableFrom)\r\n                    aggregator = tree[rh.flatKey][ch.flatKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    cls = \" #{rCls} col#{ch.row} colcol#{ch.col} #{classColExpanded}\"\r\n                    if ch.leaves > 0\r\n                        cls += \" pvtColSubtotal\"\r\n                        cls += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    else\r\n                        cls += \" #{classColShow}\"\r\n                    td = createElement \"td\", cls, aggregator.format(val),\r\n                        \"data-value\": val\r\n                        \"data-rownode\": rh.node\r\n                        \"data-colnode\": ch.node,\r\n                        getTableEventHandlers val, rh.key, ch.key, rowAttrs, colAttrs, opts\r\n\r\n                    tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[rh.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", \"pvtTotal rowTotal #{rCls}\", totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-row\": \"row#{rh.row}\"\r\n                    \"data-rowcol\": \"col#{rh.col}\"\r\n                    \"data-rownode\": rh.node,\r\n                getTableEventHandlers val, rh.key, [], rowAttrs, colAttrs, opts\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for h in attrHeaders when  h.col is colAttrs.length-1 or (h.leaves isnt 1 and h.col < opts.colSubtotalDisplay.disableFrom)\r\n                clsNames = \"pvtVal pvtTotal colTotal #{classColExpanded} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.leaves isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\",\r\n                    getTableEventHandlers val, [], h.key, rowAttrs, colAttrs, opts\r\n                # td.style.display = \"none\" if h.leaves > 0 and opts.colSubtotalDisplay.hideOnExpand\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (tbody, tr, rowAttrs, colAttrs, opts) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], [], rowAttrs, colAttrs, opts\r\n            tr.appendChild td\r\n            tbody.appendChild tr\r\n\r\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\r\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            for i in [col..collapsible]\r\n                ah = axisHeaders.ah[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                collapseAxisHeaders axisHeaders, col, opts\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide\r\n\r\n        collapseHiddenColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classColExpanded\r\n                .addClass classColCollapsed\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n            \r\n        collapseShowColSubtotal = (h, opts) ->\r\n            #exclude = \".#{classRowHide}\"\r\n            #exclude += \", .#{classColHide}\" if not opts.hideOnExpand\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classColExpanded\r\n                .addClass classColCollapsed\r\n                #.not exclude\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                #.css 'display', \"\" \r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.leaves > 1\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideChildCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            if h.col < opts.disableFrom\r\n                if hasClass h.th, classColHide\r\n                    collapseHiddenColSubtotal h, opts\r\n                else \r\n                    collapseShowColSubtotal h, opts\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                #.not \".pvtRowSubtotal.#{classRowHide}\"\r\n                #.css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n                #.css 'display', \"none\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            # h.th.style.display = \"\"\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n                #.not \".pvtRowSubtotal.#{classRowHide}\"\r\n                #.css 'display', \"\" \r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            #h.th.style.display = \"\"\r\n            #h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            showChildCol ch\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classColShow, classColHide\r\n                #ch.sTh.style.display = \"none\"\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if h.col < opts.disableFrom\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    # --colSpan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideChildRow = (ch, opts) ->\r\n            replaceClass cell, classRowShow, classRowHide for cell in ch.tr.querySelectorAll \"th, td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\r\n\r\n        collapseShowRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                    addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideChildRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h, opts\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (ch, opts) ->\r\n            replaceClass cell, classRowHide, classRowShow for cell in ch.tr.querySelectorAll \"th, td\"\r\n            replaceClass cell, classRowHide, classRowShow for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\r\n\r\n        expandShowRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                    addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n\r\n        expandHideRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            removeClass h.th, \"#{classRowCollapsed} #{classRowHide}\"\r\n            addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                    addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            expandChildRow ch[chKey], opts for chKey in ch.children if ch.clickStatus is clickStatusExpanded\r\n            showChildRow ch, opts\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n            if h.leaves > 1 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h, opts\r\n                else\r\n                    expandShowRowSubtotal h, opts\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.leaves > 1 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col] \r\n            # when h.clickStatus is clickStatusCollapsed and h.leaves > 1 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            buildValues tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colAttrHeaders, rowAttrs, colAttrs, opts if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr, rowAttrs, colAttrs, opts\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}