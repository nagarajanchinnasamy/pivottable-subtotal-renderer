{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColCollapsed","classColExpanded","classColHide","classColShow","classCollapsed","classExpanded","classRowCollapsed","classRowExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseChildCol","collapseCol","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","colsCollapseAt","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getTableEventHandlers","hasClass","hideDescendantCol","hideDescendantRow","main","processKeys","removeClass","replaceClass","rowsCollapseAt","setAttributes","setHeaderAttribs","showChildCol","showChildRow","table","clickCallback","localeStrings","rowSubtotalDisplay","disableAfter","disableFrom","disableSubtotal","colSubtotalDisplay","collapseColsAt","collapseRowsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","value","rowValues","colValues","event","eventHandlers","filters","handler","e","elementType","textContent","attributes","val","document","setAttribute","addEventListener","a","v","keysArr","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","console","warn","axisHeaders","headers","ah","arrow","hClass","expandedCount","clickStatus","onClick","collapseAt","disableExpandCollapse","onclick","window","thead","colHeaderCols","colAxisHeaders","collapse","expand","tr","appendChild","colspan","rowspan","rowHeaderRows","rowAxisHeaders","label","hProps","class","h","chKey","counter","colSpan","rowSpan","subtotalDisplay","sTh","hideOnExpand","style","display","tbody","firstChild","displayOnTop","insertBefore","sTr","colHeader","colInit","isColSubtotal","isRowSubtotal","len1","rowHeader","rowInit","td","totalAggregator","setRowInitParams","format","setColInitParams","colClass","rowClass","rowDisableFrom","isRowHideOnExpand","isColDisable","colDisableAfter","isColHideOnExpand","data-value","data-rownode","data-colnode","isDisplayOnTop","data-row","data-rowcol","clsNames","data-for","result","d","closest","find","css","not","ch","c","p","ref2","isColDisableExpandCollapse","colDisableFrom","getAttribute","cell","cells","getElementsByTagName","r","isRowDisableExpandCollapse","gch","nShown","idx","indexOf","headerNodes","nodes","colHeaders","rowHeaders","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay = {} if not opts.rowSubtotalDisplay\r\n        opts.rowSubtotalDisplay.disableAfter = 9999 if typeof opts.rowSubtotalDisplay.disableAfter is 'undefined'\r\n        opts.rowSubtotalDisplay.disableFrom = if opts.rowSubtotalDisplay.disableSubtotal then 0 else opts.rowSubtotalDisplay.disableAfter + 1 if typeof opts.rowSubtotalDisplay.disableFrom is 'undefined'\r\n        opts.colSubtotalDisplay.disableAfter = 9999 if typeof opts.colSubtotalDisplay.disableAfter is 'undefined'\r\n        opts.colSubtotalDisplay.disableFrom = if opts.colSubtotalDisplay.disableSubtotal then 0 else opts.colSubtotalDisplay.disableAfter + 1 if typeof opts.colSubtotalDisplay.disableFrom is 'undefined'\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        colsCollapseAt = 9999 if typeof opts.collapseColsAt is 'undefined'\r\n        rowsCollapseAt = 9999 if typeof opts.collapseRowsAt is 'undefined'\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            tree = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = tree\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return tree\r\n                            return acc[curVal]\r\n                        tree)\r\n                    row++\r\n                    return tree\r\n                tree)\r\n            console.warn tree\r\n            return tree\r\n\r\n        buildAxisHeader = (axisHeaders, headers, col, attrs, opts) ->\r\n            ah =\r\n                expandedCount: 0\r\n                headers: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col > opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{attrs[col]}\" \r\n            ah.th.onclick = (event) ->\r\n                event = event || window.event\r\n                ah.onClick axisHeaders, headers, attrs, col, opts\r\n            axisHeaders.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, colHeaderCols, rowAttrs, colAttrs, opts) ->\r\n            colAxisHeaders =\r\n                collapse: collapseCol\r\n                expand: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader colAxisHeaders.ah, colHeaderCols, col, colAttrs, opts\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return colAxisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowHeaderRows, rowAttrs, colAttrs, opts) ->\r\n            rowAxisHeaders =\r\n                collapse: collapseCol\r\n                expand: expandCol\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader rowAxisHeaders.ah, rowHeaderRows, col, rowAttrs, opts\r\n                rowAxisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                rowAxisHeaders.tr.appendChild ah.th\r\n            thead.appendChild rowAxisHeaders.tr\r\n            return rowAxisHeaders\r\n\r\n        setHeaderAttribs = (col, label, collapse, expand, attrs, opts) ->\r\n            hProps =\r\n                arrow: arrowExpanded\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapse\r\n                class: \"#{classExpanded} \"\r\n            if col > opts.collapseAt\r\n                hProps =\r\n                    arrow: arrowCollapsed\r\n                    clickStatus: clickStatusCollapsed\r\n                    onClick: expand\r\n                    class: \"#{classCollapsed} \"\r\n            hProps.arrow = \"\" if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n            hProps.textContent = \"#{hProps.arrow} #{label}\"\r\n            return hProps\r\n\r\n        buildColHeader = (colAxisHeaders, colHeaderCols, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader colAxisHeaders, colHeaderCols, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = colAxisHeaders.ah[h.col]\r\n            ++ah.expandedCount if h.col < opts.colSubtotalDisplay.collapseAt\r\n            ah.headers.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseCol, expandCol, colAttrs, opts.colSubtotalDisplay\r\n            h.onClick = hProps.onClick\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{hProps.class}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = hProps.textContent\r\n            if h.leaves > 1 and h.col < opts.colSubtotalDisplay.disableFrom and not opts.colSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick colAxisHeaders, colHeaderCols, h.node, opts.subtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller pvtColSubtotal\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    h.sTh.style.display = \"none\" if (opts.colSubtotalDisplay.hideOnExpand and h.col < opts.colSubtotalDisplay.collapseAt) or h.col > opts.colSubtotalDisplay.collapseAt\r\n                    h[h.children[0]].tr.appendChild h.sTh if h.children.length isnt 0\r\n                    h.th.colSpan++\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            colHeaderCols.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, rowAxisHeaders, rowHeaderRows, h, rowAttrs, colAttrs, node) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, rowAxisHeaders, rowHeaderRows, h[chKey], rowAttrs, colAttrs, node for chKey in h.children\r\n            # Process\r\n            ah = rowAxisHeaders.ah[h.col]\r\n            ++ah.expandedCount if h.col < rowsCollapseAt\r\n            ah.headers.push h\r\n\r\n            h.node = node.counter\r\n            hProps = setHeaderAttribs h.col, h.text, collapseRow, expandRow, rowAttrs, opts.rowSubtotalDisplay\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"row#{h.row} rowcol#{h.col} #{classRowShow}\"\r\n            addClass h.th, \"pvtRowSubtotal\" if h.th.children.length isnt 0\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n\r\n            if (opts.rowSubtotalDisplay.displayOnTop and h.children.length is 1) or (not opts.rowSubtotalDisplay.displayOnTop and h.children.length isnt 0)\r\n                h.tr = firstChild.tr\r\n                h.tr.insertBefore h.th, firstChild.th\r\n                h.sTh = firstChild.sTh\r\n            else\r\n                h.tr = createElement \"tr\", \"pvtRowSubtotal row#{h.row}\"\r\n                h.tr.appendChild h.th\r\n\r\n            if h.leaves > 1 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    addClass h.th, hProps.class\r\n                    h.th.textContent = \"#{hProps.arrow} #{h.text}\"\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick rowAxisHeaders, rowHeaderRows, h.node\r\n\r\n                if h.children.length > 1\r\n                    h.sTh = createElement \"th\", \"pvtRowLabelFiller pvtRowSubtotal row#{h.row} rowcol#{h.col} #{hProps.class}\"\r\n                    h.sTh.setAttribute \"data-rownode\", h.node\r\n                    h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n                    h.sTh.style.display = \"none\" if (opts.rowSubtotalDisplay.hideOnExpand and h.col < opts.rowSubtotalDisplay.collapseAt) or h.col > opts.rowSubtotalDisplay.collapseAt\r\n                    h.th.rowSpan++\r\n\r\n                    addClass h.tr, hProps.class\r\n                    if opts.rowSubtotalDisplay.displayOnTop\r\n                        h.tr.appendChild h.sTh\r\n                    else\r\n                        h.sTr = createElement \"tr\", \"pvtRowSubtotal row#{h.row} #{hProps.class}\"\r\n                        h.sTr.appendChild h.sTh\r\n                        tbody.appendChild h.sTr\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n            else\r\n                tbody.appendChild h.tr if h.children.length is 0\r\n\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = hProps.clickStatus\r\n            rowHeaderRows.push h\r\n            node.counter++\r\n\r\n        buildValues = (tbody, rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                rowInit = setRowInitParams rowHeader.col\r\n                flatRowKey = rowHeader.flatKey\r\n                isRowSubtotal = rowHeader.descendants != 0;\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    isColSubtotal = colHeader.descendants != 0;\r\n                    colInit = setColInitParams colHeader.col\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal #{colInit.colClass}\" if isColSubtotal\r\n                    style += \" pvtRowSubtotal #{rowInit.rowClass}\" if isRowSubtotal\r\n                    style += if (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (rowHeader.col > rowsCollapseAt) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                    style += if (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt))) or (colHeader.col > colsCollapseAt) then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    style += \" row#{rowHeader.row}\" +\r\n                        \" col#{colHeader.row}\" +\r\n                        \" rowcol#{rowHeader.col}\" +\r\n                        \" colcol#{colHeader.col}\"\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createElement \"td\", style, aggregator.format(val),\r\n                        \"data-value\": val,\r\n                        \"data-rownode\": rowHeader.node,\r\n                        \"data-colnode\": colHeader.node, eventHandlers\r\n                    if not isDisplayOnTop\r\n                        td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt or colHeader.col > colsCollapseAt) or (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt))) or (isColSubtotal and (isColDisable or colHeader.col > colDisableAfter or (isColHideOnExpand and colHeader.col < colsCollapseAt)))\r\n                    \r\n                    rowHeader.tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal #{rowInit.rowClass}\"\r\n                style += \" pvtRowSubtotal \" if isRowSubtotal \r\n                style += if isRowSubtotal and (rowHeader.col >= rowDisableFrom or not isDisplayOnTop or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)) then \" #{classRowHide}\" else \" #{classRowShow}\"\r\n                style += \" row#{rowHeader.row} rowcol#{rowHeader.col}\"\r\n                td = createElement \"td\", style, totalAggregator.format(val),\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row#{rowHeader.row}\",\r\n                    \"data-rowcol\": \"col#{rowHeader.col}\",\r\n                    \"data-rownode\": rowHeader.node, getTableEventHandlers val, rowHeader.key, []\r\n                if not isDisplayOnTop\r\n                    td.style.display = \"none\" if (rowHeader.col > rowsCollapseAt) or  (isRowSubtotal and (rowHeader.col >= rowDisableFrom or (isRowHideOnExpand and rowHeader.col < rowsCollapseAt)))\r\n                rowHeader.tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols when h.leaves isnt 1\r\n                colInit = setColInitParams h.col\r\n                clsNames = \"pvtVal pvtTotal colTotal #{colInit.colClass} col#{h.row} colcol#{h.col}\"\r\n                clsNames += \" pvtColSubtotal\" if h.children.length isnt 0 \r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\", getTableEventHandlers val, [], h.key\r\n                td.style.display = \"none\" if (h.col > colsCollapseAt) or (h.children.length isnt 0 and (isColDisable or h.col > colDisableAfter or (isColHideOnExpand and h.col < colsCollapseAt)))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        hideDescendantCol = (d) ->\r\n            $(d.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{d.node}\\\"], th[data-colnode=\\\"#{d.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide \r\n                .css 'display', \"none\" \r\n\r\n        collapseShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColExpanded} #{classColHide}\"\r\n                .addClass \"#{classColCollapsed} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.textContent = \" \" + arrowCollapsed + \" \" + h.text\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            for chKey in ch.children\r\n                collapseChildCol ch[chKey], h\r\n\r\n            hideDescendantCol ch\r\n\r\n        collapseCol = (axisHeaders, headers, c, opts) ->\r\n            h = headers[c]\r\n            colSpan = h.th.colSpan - 1\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                collapseChildCol ch, h\r\n\r\n            collapseShowColSubtotal h\r\n\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            ah = axisHeaders[h.col]\r\n            ah.expandedCount--\r\n            if ah.expandedCount == 0\r\n                for i in [h.col..ah.length-2] when i < opts.disableFrom\r\n                    ah = axisHeaders[i]\r\n                    replaceClass ah.th, classExpanded, classCollapsed\r\n                    ah.th.textContent = \" \" + arrowCollapsed + \" \" + ah.text\r\n                    ah.clickStatus = clickStatusCollapsed\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n                .css 'display', \"none\" \r\n            h.th.style.display = \"\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n                .not \".pvtRowSubtotal.#{classRowHide}\"\r\n                .css 'display', \"\" \r\n            h.th.style.display = \"\"\r\n            ++h.th.colSpan\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n\r\n        expandChildCol = (ch) ->\r\n            if ch.descendants != 0 and hasClass(ch.th, classColExpanded) and (isColDisable or ch.col > colDisableAfter or isColHideOnExpand)\r\n                ch.th.style.display = \"\"\r\n            else\r\n                showChildCol ch\r\n            expandChildCol ch[chKey] for chKey in ch.children if ch.clickStatus isnt clickStatusCollapsed\r\n\r\n        expandCol = (colAxisHeaders, colHeaderCols, c, opts) ->\r\n            return if isColDisable or isColDisableExpandCollapse or not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.col >= colDisableFrom or h.clickStatus is clickStatusExpanded\r\n\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n            if h.children.length isnt 0\r\n                replaceClass h.th, classColCollapsed, classColExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.text\r\n                if isColHideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colspan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            ah = colAxisHeaders[h.col]\r\n            ++ah.expandedCount\r\n            if ah.expandedCount is ah.headers.length\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + ah.th.getAttribute \"data-colAttr\"\r\n                ah.clickStatus = clickStatusExpanded\r\n\r\n        hideDescendantRow = (d) ->\r\n            d.tr.style.display = \"none\" if isDisplayOnTop\r\n            cells = d.tr.getElementsByTagName \"td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in cells\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"none\" for cell in cells\r\n                d.sTh.style.display = \"none\" if d.sTh\r\n                d.th.style.display = \"none\"\r\n\r\n        collapseShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowCollapsed + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            replaceClass h.sTh, classRowExpanded, classRowCollapsed\r\n            replaceClass h.tr, classRowExpanded, classRowCollapsed\r\n            h.tr.style.display = \"\"\r\n\r\n        collapseRow = (rowAxisHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusCollapsed or h.col >= rowDisableFrom or isRowDisableExpandCollapse \r\n\r\n            rowSpan = h.th.rowSpan\r\n            isRowSubtotal = h.descendants != 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r-i]\r\n                hideDescendantRow d\r\n            h.th.style.display = \"none\" if not isDisplayOnTop\r\n            collapseShowRowSubtotal h if isRowSubtotal\r\n            if isDisplayOnTop\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan -= rowSpan\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n\r\n            ah = rowAxisHeaders.ah[h.col]\r\n            ah.expandedCount--\r\n\r\n            return if ah.expandedCount != 0\r\n\r\n            for j in [h.col..rowAxisHeaders.ah.length-2] when j < rowDisableFrom\r\n                ah = rowAxisHeaders.ah[j]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" \" + arrowCollapsed + \" \" + ah.th.getAttribute \"data-rowAttr\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n\r\n        showChildRow = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\" \r\n            for cell in cells\r\n                replaceClass cell, classRowHide, classRowShow\r\n            if not isDisplayOnTop\r\n                cell.style.display = \"\" for cell in cells when not hasClass cell, classColHide\r\n                h.th.style.display = \"\" if h.descendants == 0 or h.clickStatus isnt clickStatusCollapsed\r\n                h.sTh.style.display = \"\" if h.sTh\r\n            h.tr.style.display = \"\"\r\n\r\n        expandShowRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\" \r\n                cell.style.display = \"\" if not hasClass cell, classColHide\r\n            h.sTh.textContent = \" \" + arrowExpanded + \" \" + h.sTh.getAttribute \"data-rowHeader\"\r\n            h.sTh.style.display = \"\"\r\n            replaceClass h.sTh, classRowCollapsed, classRowExpanded\r\n            h.th.style.display = \"\"\r\n            replaceClass h.th, classRowCollapsed, classRowExpanded\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"\"\r\n\r\n        expandHideRowSubtotal = (h) ->\r\n            cells = h.tr.getElementsByTagName \"td\"\r\n            for cell in cells\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.style.display = \"\"\r\n            replaceClass h.tr, classRowCollapsed, classRowExpanded\r\n            h.tr.style.display = \"none\"\r\n\r\n        expandChildRow = (ch) ->\r\n            nShown = 0\r\n            if ch.descendants != 0\r\n                showChildRow ch\r\n                nShown++\r\n                nShown += expandChildRow gch for gch in ch.children when ch.clickStatus isnt clickStatusCollapsed\r\n            else\r\n                showChildRow ch\r\n                nShown++\r\n            return nShown\r\n\r\n        expandRow = (rowAxisHeaders, rowHeaderRows, r, opts) ->\r\n            h = rowHeaderRows[r]\r\n            return if not h or h.clickStatus is clickStatusExpanded or isRowDisableExpandCollapse or h.col >= rowDisableFrom\r\n\r\n            isRowSubtotal = h.descendants != 0\r\n            nShown = 0\r\n            for ch in h.children\r\n                nShown +=  expandChildRow ch, 0\r\n            if isRowSubtotal\r\n                if isRowHideOnExpand\r\n                    expandHideRowSubtotal h\r\n                else\r\n                    expandShowRowSubtotal h\r\n            if isDisplayOnTop\r\n                h.th.rowSpan = nShown\r\n                p = h.parent\r\n                while p\r\n                    p.th.rowSpan += nShown\r\n                    p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            ah = rowAxisHeaders.ah[h.col]\r\n            ++ah.expandedCount\r\n            if ah.expandedCount == ah.headers.length\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + ah.th.getAttribute \"data-rowAttr\"\r\n                ah.clickStatus = clickStatusExpanded\r\n\r\n        collapseAxis = (axisHeaders, headers, attrs, attr, opts) ->\r\n            return if opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            n = attrs.length-2\r\n            return if idx < 0 or n < idx or idx >= opts.disableFrom\r\n\r\n            for i in [idx..n]\r\n                ah = axisHeaders[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[i]\r\n                ah.clickStatus = clickStatusCollapsed\r\n\r\n                ah.collapse axisHeaders, headers, h.node, opts for h in ah.headers when h.clickStatus isnt clickStatusCollapsed and h.th.style.display isnt \"none\" and h.leaves > 1\r\n\r\n        expandAxis = (axisHeaders, headerNodes, attrs, attr, expand, opts) ->\r\n            return if opts.disableExpandCollapse\r\n\r\n            idx = attr\r\n            idx = attrs.indexOf attr if typeof attr is 'string'\r\n            return if idx < 0 or idx == attrs.length-1 or i >= opts.disableFrom\r\n\r\n            for i in [0..idx] when i < opts.disableFrom\r\n                ah = axisHeaders[i]\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" \" + arrowExpanded + \" \" + attrs[i]\r\n                ah.clickStatus = clickStatusExpanded\r\n\r\n                ah.expand axisHeaders, headerNodes, h.node for h in ah.headers when h.leaves > 1\r\n\r\n            ++idx\r\n            while idx < attrs.length-1 and idx < opts.disableFrom\r\n                ah = axisHeaders[idx]\r\n                if ah.expandedCount == 0\r\n                    replaceClass ah.th, classExpanded, classCollapsed\r\n                    ah.th.textContent = \" \" + arrowCollapsed + \" \" + attrs[idx]\r\n                    ah.clickStatus = clickStatusCollapsed\r\n                else if ah.expandedCount == ah.nodes.length\r\n                    replaceClass ah.th, classCollapsed, classExpanded\r\n                    ah.th.textContent = \" \" + arrowExpanded + \" \" + attrs[idx]\r\n                    ah.clickStatus = clickStatusExpanded\r\n                ++idx\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaderRows = []\r\n            colHeaderCols = []\r\n\r\n            colHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, colHeaderCols, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colHeaderCols, colHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colHeaders.children\r\n\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowHeaderRows, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n\r\n            if colAttrs.length isnt 0\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            node = counter: 0\r\n            buildRowHeader tbody, rowAxisHeaders, rowHeaderRows, rowHeaders[chKey], rowAttrs, colAttrs, node for chKey in rowHeaders.children if rowAttrs.length > 0\r\n            # buildValues tbody, rowHeaderRows, colHeaderCols\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            # buildColTotals tr, colHeaderCols if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    #\r\n    # \r\n    # Aggregators\r\n    # \r\n    #\r\n\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}